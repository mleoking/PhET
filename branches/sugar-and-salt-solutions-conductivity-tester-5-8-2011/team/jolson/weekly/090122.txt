
Thursday 1/15
	Meeting 9:30am-12:00pm
	Tracking Database 12:30pm-1:00pm
		Initial investigation of size and testing methods
	Flash-common 3:00pm-3:30pm
		Cosmetic changes to flash-common ui (tracking->privacy,
		attempts to close/redirect if cancel button is hit, etc)
	Tracking Database 3:30pm-4:00pm
		MySQL investigation and discussion emails
	Flash-common 4:00pm-5:15pm
		Investigation and creation of a rough "preloader" to get an
		idea of whether it was possible and desirable. It is possible,
		but seems to have a few weird effects that may be fixable.
Friday 1/16
	Tracking Database 11:30am-12:30pm
		MySQL set up on local computer, database created and
		permissions for apache functional (and tested with PHP
		scripts along the way)
	Tracking Database 12:30pm-3:30pm
		Tracking database initial schema constructed, including a mostly
		flat version and a more normalized version. Implemented in SQL
		along with PHP scripts for tests and to view the raw table information.
		Tracker script implemented to allow incoming tracking messages to
		be recorded in database (and Flash-common modified to track to
		localhost for now)
	Tracking Database 3:30pm-5:30pm
		Initial version of tracking data generator designed and implemented,
		in a very rough fashion. Added flash host/sim information
		insert queries, roughly sampled according to what might happen
		when the database is live (so that reports can be tested and debugged
		before live data is received, and feasibility can be determined for
		database size)
	Tracking Database 7:00pm-9:00pm
		Database tested with data generator, showing approximately the
		expected amount of disk space being used up. Initial design of what might
		be used as queries for actual reports. Most queries are executing
		at least 20 seconds, and 4 million entries takes up
		just under 1 GB of data to store.
	Tracking Database 10:00pm-12:00am
		More query writing and tests. Some queries take up to 2 minutes that
		should hopefully be executing much faster. Minor changes to the database,
		regeneration of data and testing also take place.
Saturday 1/17
	Tracking Database 12:00am-12:30am
		Data generator slightly refactored, java host/sim information is added so
		queries that involve both java and flash simulations can be used and tested.
	Tracking Database 1:00am-1:45am
		More queries for database created and tested
	Tracking Database 4:00pm-7:30pm, 8:00pm-9:00pm
		Since disk use was much too high, a fully-normalized version of the database
		schema was created and tested. Essentially a full rewrite of the database
		schema, including indices and foreign key constraints (which were later removed
		for disk space considerations).
	Tracking Database 10:30pm-12:00am
		Created view tables to reconstruct all information from normalized tables for
		all simulations, java simulations, and flash simulations.
Sunday 1/18
	Tracking Database 12:00am-1:00am
		View table construction continued.
	Tracking Database 1:30pm-5:00pm
		Reworked normalized database, and full refactoring of code to access database,
		including encapsulating database-schema specific details in code to insert
		flash and java messages. Modified field names and sizes to save space. Database
		insertions simplified through entry of data in an array format, code to handle
		conditional insertions needed for insertion into normalized tables added.
	Tracking Database 5:00pm-5:45pm
		Refactored and updated the PHP script that receives tracking messages from Flash
		to handle the new message insertion system, and made raw-logging toggleable.
	Tracking Database 5:45pm-7:00pm
		Updated and refactored the message data generator to handle the new message
		insertion system, but to modify the just-inserted entries to correct the timestamps.
		Fully reworked the sampling system from appending strings to modifying/creating
		variables, the OS sampling, and many other things.
	Tracking Database 7:00pm-7:30pm
		Initial testing of database for the fully normalized form, encountering with bugs
		and fixes
	Tracking Database 8:30pm-10:00pm
		Modified database schema and new insertion system for low-hanging fruit performance
		optimizations and minor bugs before the database schema can be fully tested
Monday 1/19
	Tracking Database 12:30am-2:00am
		Documented tracking database and surrounding systems/utilities. Full testing of
		new normalized database design (< 400 MB total for 4 million, with newly
		modified queries running at higher speeds). Additional optimizations worked into
		PHP code for insertion, and more debugging / streamlining of code.
	Tracking Database 10am-10:30am, 11:15am-11:45am
		Discussion through email of database characteristics, design and flash-common
		installer issues with flash. (mostly database discussion)
	Tracking Database 2:30pm-5:00pm
		Database fixes for blank locale and a few other bugs. Merged field names
		(scenario/usage_type -> deployment), and made the corresponding changes
		throughout the entire Flash tracking chain (flash-common, tracking scripts,
		message insertion code, database schema, view tables, and report queries).
		Additional modifications to tracking message receiving script for raw-logging
		options (handles arbitrary field names, so it can be used to debug future versions
		without modification, including now Java). Also refactored to allow Java tracking
		from the same script in the future.
	Flash-common 5:00pm-5:45pm
		Added a movieclip hierarchy inspector for debugging purposes, mostly for accessibility
		and AsWing information. This allows insertion of a text box which will parse a movieclip
		location (_level0.panel_mc.pendulum2_ch.box_mc) and print out all of the properties
		set on that movieclip.
	Tracking Database 6:45pm-7:15pm
		Experimenting with adding indices and resulting effects on simple queries. Impossible to
		tell full effects without a more realistic set of queries that would be used with a report.
	Tracking Database 7:45pm-9:00pm
		Investigation of reporting options, including CSV, tables, and graphical means of displaying
		time-series data (PHP's GD, CSS, etc)
	Tracking Database 10:00pm-11:00pm
		Research into sub-queries for solving the conditional-insertion problem for the normalized
		tables. Either a simple SELECT, and rarely an INSERT must be used, or an INSERT and SELECT.
		INSERT statements cannot be nested, however the conditional insert could be combined to
		remove the chance of normalized table entry duplications from machines sending messages
		at the same time. The scripts shouldn't break in this case, and it is left as a SELECT and
		occassionaly an INSERT.
	Tracking Database 11:00pm-12:00am
		Creation of a number of general queries that would be used in reports, to measure the
		effects of indices, and whether they will be worth including. Mostly non-sim-specific queries.
Tuesday 1/20
	Tracking Database 12:00am-1:30am
		More queries for reports debugged and put into testing.
	Tracking Database 10:30pm-11:30pm
		A few modifications to the database schema (and corresponding utility scripts) including
		table names and enum instead of bool for sim type.
	Tracking Database 11:30pm-12:00am
		Additional sample queries
Wednesday 1/21
	Tracking Database 12:00pm-2:00pm
		Modified message data generator to include user entry generation so number of unique user
		report queries can be tested. Many new report queries.
	Internationalization 2:00pm-2:30pm
		Modification of .html generation to make certain localization files optional. Now we can have
		Flash simulations with either JUST common strings translated, or JUST sim strings translated.
		The other will default to english.
	Tracking Database 3:00pm-4:00pm, 5:00pm-7:00pm, 9:00pm-10:15pm
		Creation of a large number of report queries, specifically including refactoring the
		test report to handle sim-specific queries as might be used. Significant testing on the use
		of particular indices, and in particular statistics data is stored so individual queries can be
		optimized in the future. Indices do not look that promising for the amount of space that
		would be given up.

Totals:
	Meeting 2:30
	Flash-common 2:00
	Internationalization 0:30
	Tracking Database 45:50

Overall: 50:50
