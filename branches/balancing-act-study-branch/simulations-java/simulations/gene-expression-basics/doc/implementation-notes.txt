
1. Implementation Notes for Tabs 1 and 2

Gene Expression Basics is a relatively complex simulation as PhET sims go.  The
model, in particular, is complex due to the complexity of the domain that is
being modeled, which is the molecular basis for protein synthesis.  One of the
main abstractions used in the design of the model code is the “Biomolecule”.
Everything that moves on the first and second tabs of the simulation is a
descendant of a class called “MobileBiomolecule”.  The model code controls the
motion of these biomolecules and the interaction between them, and the
interaction between the mobile biomolecules and the DNA.  Note that, although
DNA is considered a biomolecule in real life, it is not a mobile biomolecule in
this simulation and is thus treated somewhat differently.

The motion and attachment behavior of the mobile biomolecules are controlled by
a set of classes that were designed to communize as much of this code as
possible.  The motion is controlled by the MotionStrategy classes.  These are
reasonably straightforward.

The attachment behavior for each biomolecule is governed by the
AttachmentStateMachine classes, and these can become fairly complex.  The
attachment state machines are responsible for determining when a biomolecule
should attach to another, to the DNA, detach from a current attachment, avoid
attaching to anything, and so forth.  In designing the class hierarchy, a
generic version of the attachment state machine was created, and specialized
behavior is added through inheritance as needed for each of the biomolecules.

At each time step, each biomolecule does the following:
- Moves.
- Updates its "attachment state", which determine how it will move during the
  subsequent time step.

At each step in time, a biomolecule first moves based on its current motion
strategy.  After this, it looks at its attachment state and decides whether
to seek out any new attachments.  If it is available for attachments, it will
poll other molecules that it could potentially attach to in order to see if
there are attachment sites that are open and are close enough. It does this by
"proposing an attachment" to the other biomolecule(s).  The convention for this
is that each biomolecule has a method called "considerProposalFrom", and the
type signature specifies the proposer.  If a proposal is accepted, an
attachment site is returned, and the proposing biomolecule will start moving
toward that site.  If the biomolecule that is being stepped is already moving
towards an attachment, or is already attached, it generally does not seek out
any new attachments.

The general behavior of each mobile biomolecule can be described by a state
machine, the states and transitions for which are shown in the diagram below.
Behavior that is unique to a given biomolecule is added through overriding
individual states or the default attachment state machine.

                   ----------------------------
                   | UNATTACHED_AND_AVAILABLE |
                   ----------------------------
                   ^                      |  ^
                   |                      |  |
                   |                      V  |
------------------------------          -----------------------------
| UNATTACHED_BUT_UNAVAILABLE |          | MOVING_TOWARDS_ATTACHMENT |
------------------------------          -----------------------------
                      ^                           |
                      |                           |
                       -------       -------------
                              |     |
                              |     V
                             ------------
                             | ATTACHED |
                             ------------


Biomolecules propose attachments to other biomolecules.  If the biomolecule
that receives the proposal has an attachment site that is close enough and is
open, it will generally accept the attachment request.  Once a proposal is
accepted, the proposing molecule starts moving toward the attachment site on
the accepting molecule.

1.1 Motion Strategies

The motion of each biomolecule is controlled by a motion strategy, which is a
class that essentially decides where the molecule should go next in model
space at each time step.  For the most part, the motion strategy is set by the
molecule's attachment state machine (more on attachment state machines below).

Question to self: Are there places where the ASM doesn't set the motion
strategy and, if so, why is it necessary to do this?

1.2 Attachment Sites

Attachment sites can only have one biomolecule attached at a time.

In each attachment that occurs, there is an attacher and an attachee.

Attachment sites do not specify the tip of biomolecule that can attach to it.
It is up to the individual biomolecules to keep track of which attachment sites
are appropriate for which biomolecules.  This was done because it is possible
in some cases to have one attachment site pertain to a number of different
types of biomolecules.

1.3 View

The view is fairly straightforward.  Each biomolecule in the model has a view
component that portrays its position, shape, and color.  The view provides
tool box nodes that allow the user to create and remove biomolecules by
dragging them out of the tool box.

2. Tab 3 - Multiple Cells Model

The 3rd tab shares very little code with the first two.  The central part of
the underlying model for the third tab is a class called
CellProteinSynthesisSimulator, which simulates the behavior of a single cell
that exhibits varying levels of protein expression based on a set of parameters
for the cell, such as transcription factor level, polymerase affinity, and so
forth.  A set of instances of this protein synthesizer class are created and
depicted for the user so that they can see the variations that occur in the
cells as time goes on, and can also experiment with the effects of changing
several of the parameters that affect protein production.
