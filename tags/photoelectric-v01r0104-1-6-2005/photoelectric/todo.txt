- Increase y range of current vs. voltage graph\
- Make beam control better looking and less obtrusive
- Make graph traces lie on top of axes



Model
-----
- Make ElectronSource.ElectronProductionEvent a top level class

-The voltage scale factor is in the PhotoelectricModel class right now. Should it be set up somewhere
else, and should we understand where it comes from?

- Define SplinePlot for Charts

- Make ElectronTracker and PhotonTracker top-level classes, so they can be used by other classes. In fact,
make them ModelElementTracker, and add the events to ModelElement.

- ElectronSource adds electrons to the model. CollimatedBeam does not. They should both work the same way.

- BeamCurtainGraphic points downward by default, and has a hack for rotating it.

- The rotated beam doesn't look right. Try an angle of 170 deg. to see.

- ElectronSink doesn't need to be an ElectronSourceListener, or whatever it is.

Issues
------
- There seems to be a ceiling on the max rate of electrons that can be produced
- Make fanout an attribute of CollimatedBeam, and make photons fan out
- Problem with initial view of beam graphic is in the determination of beamDepth in BeamCurtainGraphic.update(). When
it's fixed, get rid of hack in PhotoelectricModule constructor
- CollimatedBeam is screwed up. The direction parameter conflicts with the bounds, width and height, vertical and
horizontal, etc.
- Calibrate the volts according to Sam's note

Charts
------
Need much better documentation.
    - better examples
    - explanation of how Chart class works
    - LinePlot.setBorderColor() is a very misleading name
    - If you try to plot data that is out of range, you get nothing at all
    - Sam has inner classes in the middle of the outer class' code. At least he did in DataSet.
    - Pukes if you try to have an x axis run from a larger value on the left to a smaller value
    on the right.

Electrode Potential and Electron movement
-----------------------------------------
This is handled in the DischargeLampModel class, in setElectronAcceleration().