<project name="General Ant Build Script" default="Publish Executables" basedir=".">

    <!--  Set ant output directories.  -->
    <property name="ant.output" value="../ant_output"/>
    <property name="classes" location="${ant.output}/classes"/>
    <property name="jars" location="${ant.output}/jars"/>
    <property name="javadoc" location="${ant.output}/javadoc"/>
    <property name="lib" location="${ant.output}/lib"/>

    <!--    Set current sister directories, for backup and release data. -->
    <property name="development" location="../development"/>
    <property name="backup" location="../backup"/>
    <property name="releases" location="../releases"/>
    <property name="idea.classes" location="${development}/classes"/>

    <!--  Set up child directories, for during the build.  -->
    <property name="src" location="src"/>
    <property name="tests-src" location="tests-src"/>
    <property name="data" location="data"/>

    <property file="build.properties"/>
    <property file="../local.build.properties"/>
    <property file="build.time.stamp" location="${data}"/>

    <property name="build.number.txt" value="${data}/${distname}.build.number"/>
    <property name="timestamp.name" value="${data}/${distname}.build.time.stamp"/>

    <description>
        Build File.
    </description>

    <taskdef name="copyclasspath" classname="org.reids.anttasks.CopyClasspath" classpath="${antutil}"/>
    <taskdef name="createresourcetag" classname="org.reids.anttasks.CreateResourcesTag" classpath="${antutil}"/>
    <taskdef name="CreateBatchFile" classname="org.reids.anttasks.CreateBatchFile" classpath="${antutil}"/>

    <target name="Clean Dependencies">
        <delete dir="${idea.classes}"></delete>
        <mkdir dir="${idea.classes}"></mkdir>
    </target>

    <target name="init">
        <tstamp/>
    </target>

    <target name="Backup Source" depends="init">
        <mkdir dir="${backup}"/>
        <tstamp>
            <format property="backup.time" pattern="d-MMMM-yyyy h-mmaa" locale="en" timezone="MST"></format>
        </tstamp>
        <mkdir dir="${backup}/${distname}_src_${backup.time}"/>
        <copy todir="${backup}/${distname}_src_${backup.time}">
            <fileset dir="${src}"/>
<!--            <fileset dir="${tests-src}"/>-->
        </copy>
    </target>

    <target name="Backup Development" depends="init">
        <mkdir dir="${backup}"/>
        <tstamp>
            <format property="backup.time" pattern="d-MMMM-yyyy h-mmaa" locale="en" timezone="MST"></format>
        </tstamp>
        <mkdir dir="${backup}/${distname}_dev_${backup.time}"/>
        <copy todir="${backup}/${distname}_dev_${backup.time}">
            <fileset dir="${development}"/>
        </copy>
    </target>

    <target name="Backup Dev and Lib" depends="init">
        <mkdir dir="${backup}"/>
        <tstamp>
            <format property="backup.time" pattern="d-MMMM-yyyy h-mmaa" locale="en" timezone="MST"></format>
        </tstamp>
        <mkdir dir="${backup}/${distname}_dev_${backup.time}"/>
        <copy todir="${backup}/${distname}_dev_${backup.time}">
            <fileset dir="${development}"/>
        </copy>
        <copyclasspath directory="${backup}/${distname}_dev_${backup.time}/lib" ignore="${ignorepath}"/>
    </target>

    <!--    <target name="Backup Dev and Lib to desktop" depends="init">-->
    <!--        <mkdir dir="${desktop}"/>-->
    <!--        <tstamp>-->
    <!--            <format property="backup.time" pattern="d-MMMM-yyyy h-mmaa" locale="en" timezone="MST"></format>-->
    <!--        </tstamp>-->
    <!--        <mkdir dir="${desktop}/${distname}_dev_${backup.time}"/>-->
    <!--        <copy todir="${desktop}/${distname}_dev_${backup.time}">-->
    <!--            <fileset dir="${development}"/>-->
    <!--        </copy>-->
    <!--        <copyclasspath directory="${desktop}/${distname}_dev_${backup.time}/lib" ignore="${ignorepath}"/>-->
    <!--    </target>-->

    <target name="Clean"
        description="clean up">
        <delete dir="${classes}"/>
        <delete dir="${jars}"/>
        <delete dir="${javadoc}"/>
        <delete dir="${lib}"/>
    </target>

    <target name="Compile" depends="init"
        description="compile the source ">
        <delete dir="${classes}"/>
        <mkdir dir="${classes}"/>
        <javac srcdir="${src}" destdir="${classes}"/>
        <!--    Uncomment the following line to add test classes to the output jar.    -->
<!--        <javac srcdir="${tests-src}" destdir="${classes}"/>-->
    </target>

    <target name="Generate Build Info">
        <buildnumber file="${build.number.txt}"/>
        <tstamp>
            <format property="jar.creation.time" pattern="d-MMMM-yyyy h:mm aa" locale="en" timezone="MST"></format>
        </tstamp>
        <echo file="${timestamp.name}" message="${jar.creation.time}"></echo>
    </target>

    <target name="Generate Jar" depends="Compile"
        description="generate the distribution">
        <!-- Create the distribution directory -->
        <delete dir="${jars}"/>
        <mkdir dir="${jars}"/>
        <antcall target="Generate Build Info"/>
        <property file="${build.number.txt}"/>
        <jar destfile="${jars}/${distname}.jar">
            <fileset dir="${classes}"/>
            <fileset dir="${data}"/>
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
        </jar>
    </target>

    <target name="Javadoc">
        <delete dir="${javadoc}"/>
        <javadoc destdir="${javadoc}" author="true" version="true" use="true">
            <packageset dir="src" defaultexcludes="yes">
            </packageset>
            <bottom><![CDATA[<i>Copyright &#169; 2003 Sam Reid. All Rights Reserved.</i>]]></bottom>
            <link href="http://java.sun.com/products/jdk/1.4/docs/api/"/>
        </javadoc>
    </target>

    <target name="Publish Library" depends="Generate Jar,Javadoc"
        description="generate the release distribution, including binary, source and docs">
        <mkdir dir="${releases}"/>
        <property file="${build.number.txt}"/>
        <property name="destdir" value="${releases}/${distname}${version}_library-build-${build.number}"/>
        <mkdir dir="${destdir}"/>
        <mkdir dir="${destdir}/src"/>
        <mkdir dir="${destdir}/bin"/>
        <mkdir dir="${destdir}/javadoc"/>
        <mkdir dir="${destdir}/fullbackup-development"/>

        <copy todir="${destdir}/fullbackup-development">
            <fileset dir="${development}"/>
        </copy>

        <copy todir="${destdir}">
            <fileset dir="." casesensitive="yes">
                <include name="*.txt"/>
                <include name="*.xml"/>
                <include name="*.properties"/>
            </fileset>
        </copy>

        <copy todir="${destdir}/javadoc">
            <fileset dir="${javadoc}"></fileset>
        </copy>

        <copy todir="${destdir}/bin">
            <fileset dir="${jars}"/>
        </copy>

        <copy todir="${destdir}/src">
            <filterset>
                <filter token="ant_header" value="This file is part of ${projectname}.${line.separator}${line.separator}${projectname} is free software; you can redistribute it and/or modify${line.separator}it under the terms of the GNU General Public License as published by${line.separator}the Free Software Foundation; either version 2 of the License, or${line.separator}(at your option) any later version.${line.separator}${line.separator}${projectname} is distributed in the hope that it will be useful,${line.separator}but WITHOUT ANY WARRANTY; without even the implied warranty of${line.separator}MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the${line.separator}GNU General Public License for more details.${line.separator}${line.separator}You should have received a copy of the GNU General Public License${line.separator}along with Foobar; if not, write to the Free Software${line.separator}Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA${line.separator}${line.separator}Copyright ${user.name}, 2003"/>
            </filterset>
            <fileset dir="${src}"/>
        </copy>
        <copyclasspath directory="${destdir}/lib" ignore="${ignorepath}"/>
        <CreateBatchFile mainJar="bin/${distname}.jar" libDir="${destdir}/lib" mainClassName="${main.class}" outputFile="${destdir}/run_${distname}.bat"/>
    </target>

    <target name="Copy Classpath To lib">
        <delete dir="${lib}"/>
        <copyclasspath directory="${lib}" ignore="${ignorepath}"/>
        <createresourcetag mainJar="${distname}.jar" directory="${lib}" outputFile="resources.ant.output.txt"/>
        <CreateBatchFile mainJar="bin/${distname}.jar" libDir="${lib}" mainClassName="${main.class}" outputFile="run_${distname}.bat">
        </CreateBatchFile>
    </target>

    <target name="Output Classpath to File">
        <echo file="classpath.output.txt" message="${java.class.path}"></echo>
    </target>

    <target name="Publish Executables" depends="Generate Jar"
        description="generate executables, jar files, lib files, a batchfile">
        <mkdir dir="${releases}"/>
        <property file="${build.number.txt}"/>
        <property name="destdir" value="${releases}\${distname}${version}_exec-build-${build.number}"/>
        <mkdir dir="${destdir}"/>
        <copy todir="${destdir}">
            <fileset dir="${jars}"/>
        </copy>
        <copy todir="${destdir}">
            <fileset dir="." casesensitive="yes">
                <include name="${distname}.jnlp"></include>
            </fileset>
        </copy>
        <!--        <copyclasspath directory="${destdir}/lib" ignore="${ignorepath}"/>-->
        <CreateBatchFile mainJar="${distname}.jar" libDir="${destdir}/lib" mainClassName="${main.class}" outputFile="${destdir}/run_${distname}.bat"/>
        <exec dir="${destdir}" executable="explorer">
            <arg line="${destdir}"/>
        </exec>
    </target>

    <target name="Open Explorer">
        <exec dir="${development}" executable="explorer">
            <arg line="${development}"></arg>
        </exec>
    </target>

    <target name="Open Explorer Top">
        <exec dir="${basedir}" executable="explorer">
            <arg line="${basedir}"></arg>
        </exec>
    </target>

</project>