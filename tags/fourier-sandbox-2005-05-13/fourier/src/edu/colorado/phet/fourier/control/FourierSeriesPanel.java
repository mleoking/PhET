/* Copyright 2005, University of Colorado */

/*
 * CVS Info -
 * Filename : $Source$
 * Branch : $Name$
 * Modified by : $Author$
 * Revision : $Revision$
 * Date modified : $Date$
 */

package edu.colorado.phet.fourier.control;

import java.awt.Color;
import java.awt.GridBagConstraints;

import javax.swing.BorderFactory;
import javax.swing.JPanel;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import edu.colorado.phet.common.view.util.SimStrings;
import edu.colorado.phet.fourier.model.FourierSeries;
import edu.colorado.phet.fourier.util.EasyGridBagLayout;


/**
 * FourierSeriesPanel
 *
 * @author Chris Malley (cmalley@pixelzoom.com)
 * @version $Revision$
 */
public class FourierSeriesPanel extends JPanel {
    
    //----------------------------------------------------------------------------
    // Instance data
    //----------------------------------------------------------------------------
    
    // Things to be controlled.
    private FourierSeries _fourierSeriesModel;
    
    // UI components
    private ControlPanelSlider _numberOfComponentsSlider;
    private ControlPanelSlider _fundamentalFrequencySlider;
    
    //----------------------------------------------------------------------------
    // Constructors
    //----------------------------------------------------------------------------
    
    /**
     * Sole constructor.
     * 
     * @param fourierSeriesModel
     */
    public FourierSeriesPanel( FourierSeries fourierSeriesModel )
    {
        assert( fourierSeriesModel != null );
        
        // Things we'll be controlling.
        _fourierSeriesModel = fourierSeriesModel;
        
        // Title
        Border lineBorder = BorderFactory.createLineBorder( Color.BLACK, 2 );
        String title = SimStrings.get( "FourierSeriesPanel.title" );
        TitledBorder titleBorder = BorderFactory.createTitledBorder( lineBorder, title );
        setBorder( titleBorder );
        
        // Number of harmonics
        {
            String format = SimStrings.get( "FourierSeriesPanel.numberOfComponents" );
            _numberOfComponentsSlider = new ControlPanelSlider( format );
            _numberOfComponentsSlider.setMaximum( 15 );
            _numberOfComponentsSlider.setMinimum( 5 );
            _numberOfComponentsSlider.setValue( 7 );
            _numberOfComponentsSlider.setMajorTickSpacing( 2 );
            _numberOfComponentsSlider.setMinorTickSpacing( 1 );
            _numberOfComponentsSlider.setSnapToTicks( true );
        }
        
        // Fundamental frequency
        {
            String format = SimStrings.get( "FourierSeriesPanel.fundamentalFrequency" );
            _fundamentalFrequencySlider = new ControlPanelSlider( format );
            _fundamentalFrequencySlider.setMaximum( 1200 );
            _fundamentalFrequencySlider.setMinimum( 200 );
            _fundamentalFrequencySlider.setValue( 440 );
            _fundamentalFrequencySlider.setMajorTickSpacing( 250 );
            _fundamentalFrequencySlider.setMinorTickSpacing( 50 );
            _fundamentalFrequencySlider.setSnapToTicks( false );
        }
        
        // Layout
        EasyGridBagLayout layout = new EasyGridBagLayout( this );
        setLayout( layout );
        int row = 0;
        layout.addFilledComponent( _numberOfComponentsSlider, row++, 0, GridBagConstraints.HORIZONTAL );
        layout.addFilledComponent( _fundamentalFrequencySlider, row++, 0, GridBagConstraints.HORIZONTAL );
        
        // Wire up event handling.
        EventListener listener = new EventListener();
        _numberOfComponentsSlider.addChangeListener( listener );
        _fundamentalFrequencySlider.addChangeListener( listener );
        
        // Set the state of the controls.
        update();
    }
    
    /**
     * Updates the control panel to match the state of the things that it's controlling.
     */
    public void update() {
        _numberOfComponentsSlider.setValue( _fourierSeriesModel.getNumberOfComponents() );
        _fundamentalFrequencySlider.setValue( (int)_fourierSeriesModel.getFundamentalFrequency() );
    }
    
    //----------------------------------------------------------------------------
    // Inner classes
    //----------------------------------------------------------------------------
    
    /**
     * EventListener is a nested class that is private to this control panel.
     * It handles dispatching of all events generated by the controls.
     */
    private class EventListener implements ChangeListener {
        
        public EventListener() {}
        
        public void stateChanged( ChangeEvent event ) {
            if ( event.getSource() == _numberOfComponentsSlider ) {
                if ( !_numberOfComponentsSlider.getSlider().getValueIsAdjusting() ) {
                    int numberOfComponents = _numberOfComponentsSlider.getValue();
                    _fourierSeriesModel.setNumberOfComponents( numberOfComponents );
                }
            }
            else if ( event.getSource() == _fundamentalFrequencySlider ) {
                int fundamentalFrequency = _fundamentalFrequencySlider.getValue();
                _fourierSeriesModel.setFundamentalFrequency( fundamentalFrequency );
            }
            else {
                throw new IllegalArgumentException( "unexpected event: " + event );
            }
        }
    }
}
