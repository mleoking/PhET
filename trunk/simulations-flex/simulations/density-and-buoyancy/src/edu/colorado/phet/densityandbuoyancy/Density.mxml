<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:cmp="edu.colorado.phet.densityandbuoyancy.*"
                xmlns:view="edu.colorado.phet.densityandbuoyancy.view.*"
                layout="absolute" width="100%" height="100%" applicationComplete="onApplicationComplete()"
                preinitialize="init()">
    <!--xmlns:common="edu.colorado.phet.flexcommon.*"-->
    <!--<common:FlexCommonMXML id="flexcommon" right="0" y="0" />-->
    <!--<mx:TabNavigator width="100%" height="100%" change="onSwitch(event)" creationPolicy="all" id="tabNavigator" fontSize="0">-->
    <mx:Canvas width="100%" height="100%" label="Density" id="densityCanvas" fontSize="12">
        <mx:Canvas backgroundColor="0x000000" width="100%" height="100%"/>
        <view:DensityModule width="100%" height="100%" id="tab0"/>
        <mx:Panel right="20" y="20" title="{FlexSimStrings.get('mode.title','Modes')}">
            <mx:RadioButton groupName="modes" id="customObject" label="{FlexSimStrings.get('mode.customObject','Custom Object')}"
                            click="tab0.switchToCustomObject()" selected="true"/>
            <mx:RadioButton groupName="modes" id="sameMass" label="{FlexSimStrings.get('mode.objectsOfSameMass','Objects of Same Mass')}"
                            click="tab0.switchToSameMass()"/>
            <mx:RadioButton groupName="modes" id="sameVolume" label="{FlexSimStrings.get('mode.objectsOfSameVolume','Objects of Same Volume')}"
                            click="tab0.switchToSameVolume()"/>
            <mx:RadioButton groupName="modes" id="sameDensity" label="{FlexSimStrings.get('mode.objectsOfSameDensity','Objects of Same Density')}"
                            click="tab0.switchToSameDensity()"/>
            <mx:RadioButton groupName="modes" id="mysteryObjects" label="{FlexSimStrings.get('mode.mysteryObjects','Mystery Objects')}"
                            click="tab0.switchToMysteryObjects()"/>
            <!--<mx:Label text="Developer Controls"/>-->
            <!--<mx:HSlider minimum="5" maximum="50" tickInterval="1" labels="[0,25,50,75,100]" thumbDrag="tab0.testSliderChange(event)"/>-->
        </mx:Panel>
        <mx:Panel right="10" bottom="10">
            <mx:Button label="Reset All" click="resetAll()"/>
        </mx:Panel>
    </mx:Canvas>
    <view:DebugText id="debug" height="100" x="0" y="0" text="" color="#FFFFFF" click="DebugText.clear();"/>
    <mx:Script><![CDATA[
        import edu.colorado.phet.densityandbuoyancy.view.AbstractDensityModule;
        import edu.colorado.phet.flexcommon.FlexCommon;
        import edu.colorado.phet.flexcommon.FlexSimStrings;

        private var oldIndex:Number = 0;
        private var common:FlexCommon = new FlexCommon();

        private function getAllTabs():Array {
            //            return new Array(tab0, tab1);
            return new Array(tab0);
        }

        private function onApplicationComplete():void {
            for each (var view:AbstractDensityModule in getAllTabs()) {
                view.init();
                view.pause();
            }
            //            toybox.init();
            getAllTabs()[0].start();
            //            var panel:PropertiesPanel = new SpherePropertiesPanel();

            //            propertiesContentPanel.addChild(panel);

            //            tab0.densityCanvas = densityCanvas;
            tab0.doInit(densityCanvas);
            tab0.switchToCustomObject();
        }

        private function init():void {
            trace("Inited.");
        }

        private function onSwitch(e:Event):void {
            var newIndex:Number = e.currentTarget.selectedIndex;
            if (oldIndex == newIndex) {
                return;
            }

            const tabList:Array = getAllTabs();
            const oldTab:AbstractDensityModule = tabList[oldIndex];
            const newTab:AbstractDensityModule = tabList[newIndex];

            oldTab.pause();
            newTab.start();

            oldIndex = newIndex;
        }

        private function resetAll():void {
            // TODO: bind sameMass
            customObject.selected = true;
            tab0.resetAll();
        }

        //        private function resetTab1():void {
        //            tab1.reset();
        //        }

        ]]></mx:Script>

</mx:Application>