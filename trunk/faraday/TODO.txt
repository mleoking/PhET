===============================================================================
"To Do" list for "faraday" simulation
===============================================================================

IN PROGRESS:


HIGH PRIORITY:
- after a collision, don't start dragging again until cursor is over the object


MEDIUM PRIORITY:
- check performance of grid with calc disable & drawing enabled
- cache grid needles at 1-degree angles to eliminate rotation transform
- optimize performance
- check performance with a profiler
- Transformer module requirements
- remove AffineTransform from BarMagnet.getStrength(Point2D) and PickupCoil.updateEmf as possible optimization
- check for unnecessary notification, events and updates

LOW PRIORITY:
- background color (use new PhetApplication interface)
- disable "See Inside Magnet" control when grid is off
- transparent bar magnet layer so that field meter looks like it's inside it
- agree on control labels
- Wiggle Me's
- remove unused images from JAR file
- remove unused i18n strings
- Help/MegaHelp
- resize any images that are currently scaled (eg, bar magnet, electron)
- remove smoothing code from PickupCoil when I'm sure I don't need it
- delete DeveloperControlsPanel when we don't need it anymore
- remove DebuggerGraphic from modules
- move test-src programs to examples project

phetcommon:
- hand cursor bug, doesn't revert to arrow if cursor is outside graphic's bounds
- ApparatusPanel2 resize problems
- MathUtil.clamp behavior with Double.NaN
- add setComposite to PhetGraphic and its subclasses, use in BarMagnetGraphic
- fix PhetShapeGraphic.contains so that stroke width is taken into account, test with CompassGraphic
- make PhetTextGraphic handle '\n', deprecate PhetMultiLineTextGraphic

DONE:
v0r14...
(2/16) - after resizing the app, objects have incorrect knowledge of the "edges of the apparatus panel"
(2/16) - compass grid does not fill the apparatus panel
(2/16) - implement TranslationListener as an inner class instead of and anonymous class
v0r13...
(2/15) - collision detection between compass and magnet
(2/15) - collision detection between magnet and coil
(2/15) - when electrons jump between curves, they sometimes end up in the wrong position
(2/14) - remove CompassGraphic.setVisible override, not needed
(2/14) - loop radius should be displayed as loop area
(2/14) - fix electron density in coil ends
v0r12...
(2/10) - make electrons jump between front & back layers
(2/10) - make electrons look different in front and back layers
(2/10) - make QuadBezierSpline a subclass of QuadCurve.Double
(2/10) - make electrons move as a function of induced current
(2/10) - don't recreate coil when emf changes, only when physical coil properties change
(2/10) - on/off control for electrons
(2/10) - 25% more space between electrons
(2/10) - add jiggle to voltmeter needle
(2/10) - move localization init into SimStrings
(2/9) - move localization init into PhetApplication
(2/9) - reposition objects in all modules
(2/9) - localize mnemonics for menus and menu items
(2/9) - lightBulb -> lightbulb, voltMeter -> voltmeter
(2/9) - move background color control out of FaradayApplication
(2/9) - beautify Control Panels
(2/8) - disable Developer Controls panel
(2/8) - move grid controls to dialog accessible via Options menu, include a performance warning, change all grids
(2/8) - prevent dragging of stuff out of the apparatus panel viewport
(2/8) - show important "spikes" in induced emf (fixed when I disabling smoothing)
(2/8) - disable emf smoothing (median filter) in coil
(2/8) - tune min/max number of light rays
(2/8) - tune min/max light ray length
(2/8) - light rays should be opaque, thicker stroke
(2/8) - compass "off" by default in "Magnet & Coil" module
(2/8) - grid "off" by default in "Magnet & Coil" module
(2/8) - increase frame rate to 25 fps
v0r11...
(2/7) - basic support for electron animation
(2/7) - convert CompassNeedleGraphic to be a CompositePhetGraphic composed of PhetShapeGraphics
(2/7) - optimize CompassGridGraphic to draw its own needles
(2/4) - adjust top part of coil loop for collision detection & shading
(2/3) - add background color chooser to menubar (ala CCK)
(2/3, 3:26PM) - synchronize phetcommon-HEAD to pick up major "persistence" merge
(2/3) - various adjustments to handle arbitrary orientation of the coil
(2/3) - compute induced emf using average of flux at 3 points (center and 2 edges of coil)
(2/3) - calibrate MAX_EMF to match emf induced when magnet strength, loop radius, #loops are all maximums
(2/3) - simplify some of the Developer Controls (magnet size, needle size)
(2/3) - optimize grid when background is black (don't use alpha)
(2/3) - lower frame rate to 10 fps (performance optimization)
(2/3) - convert all model elements to use radians instead of degrees (performance optimization)
(2/3) - fix Field Meter text field locations (broken by PhetTextGraphic change)
(2/3) - merge HollywoodCompass into Compass, collapse AbstractCompass and Compass
v0r10...
(2/2) - redo lightbulb graphic, looks ratty on black background
(2/2) - fix CoilGraphic so that it's foreground & background look right when magnet passes thru coil near edges
(2/1) - add threshold to Compass.stepInTime to prevent Verlet from hogging CPU
(2/1) - redo coil graphic (constant wire gauge, fix colors)
v0r9...
(1/28) - pull "developer" panel out of BarMagnetControlPanel so that it can be reused elsewhere
(1/28) - grid is not always full of needles (GraphicLayerSet fix)
(1/28) - bounds of light rays are not always correct (GraphicLayerSet fix)
(1/28) - rewrite CompassGraphic to use Shapes instead of image
v0r8...
(1/27) - add color chooser so that folks can experiment with apparatus panel colors
(1/27) - let control panels manipulate model/view components directly instead of via module
(1/27) - one debug control for "Grid spacing" (instead of separate controls for XY spacing)
(1/27) - "probe" to "meter" throughout code
(1/27) - B Field Meter coordinate system: +X right, +Y up, +angle counterclockwise (0 degrees down +X axis)
(1/27) - redo B Field Meter graphic (30% larger fonts, "Magnetic (B) Field" title, i18n)
(1/27) - use compass needle aspect ratio for grid needles
v0r7...
(1/26) - adjust sensitivity of voltmeter and lightbulb
(1/26) - factor out common code for value rescaling
(1/26) - add value rescaling to lightbulb & voltmeter
(1/25) - use median values always, except when changing polarity, #loops or radius
(1/25) - compass on/off control
(1/25) - reduce range of magnet strength to 100-300 Gs
(1/25) - move median filtering into PickupCoil (emf)
(1/25) - use one image for bar magnet, set transparency using g2.setComposite
(1/24) - use CCK graphic for lightbulb illumination
(1/24) - use median values only when magnet or coil are being dragged
(1/21) - separate PickupCoilGraphic into foreground & background layers
(1/21) - rescale alpha values in compass grid to account for magnet strength and field dropoff
(1/21) - redo BFieldProbe graphic, add crosshairs
(1/21) - redo voltmeter graphic, add "volts" label
v0r6...
(1/20) - when flipping polarity, jiggle the compass so that it starts moving sooner
(1/20) - control to turn BFieldProbe on/off
(1/20) - "see inside magnet" feature
(1/20) - no change in EMF when point moves around inside magnet (THIS IS CORRECT! Mike)
(1/20) - rename module Compass Grid -> Bar Magnet
(1/20) - rename module Bar Magnet -> Magnet & Coil
(1/20) - redo compass graphic
(1/20) - use Ron's enhancements to ControlPanel
v0r5...
(1/19) - sample graphic for electron "look"
(1/19) - draw pickup coil correctly when loop area is changed
(1/19) - redo coil graphic, more of a tilt, thicker wire, copper/brown color
(1/18) - averaging of values so that lightbulb & voltmeter behave smoothly
(1/18) - determine the role of "current" in the model
(1/14) - fix PickupCoil.stepInTime to properly set EMF and induced current
(1/14) - model elements for lightbulb and voltmeter
(1/13) - add inertia to compass needle
v0r4...
(1/12) - dipole stuff is screwed up when magnet polarity is flipped
(1/11) - add B-field probe
(1/6) - nail down semantics of magnet "strength"
(1/5) - equation for the magnetic field of a dipole
v0r3...
(1/4) - how to populate resized apparatus panel with grid?
(1/3) - compass
(1/3) - wires connecting loop to meter/bulb
(1/3) - alpha channel in lightbulb emission
(12/28) - change "loop area" control to be value-based, not scale-based

NO:
(2/15) - encapulate all rescaling of emf into one place (already encapsulated in Rescaler)
(2/10) - PickupCoilGraphic leaves screen turds (ApparatusPanel2 problem)
(2/10) - make lightbulb ramp up/down instead of immediate on/off (looks fine as is)
(2/7) - repaint compass grid when background color changes, in case we're switching rendering strategies (no longer necessary)
(1/28) - use offscreen buffering in apparatus panel to remove screen turds? (found GraphicLayerSet problem)

===============================================================================