===============================================================================
"To Do" list for "faraday" simulation
===============================================================================

IN PROGRESS:


HIGH PRIORITY:
- EMF drops near the AC Power Supply, as pickup coil becomes perpendicular to the field
- calculate periods of Generator and AC so that delta flux is zero/max at correct point
- make electrons move at same speed whether grid is on or off

MEDIUM PRIORITY:
- optimize rendering of LightBulbGraphic (~50 rays drawn at max settings)
- graph of field strength over time on the Field Meter
- add a dialog that warns about performance implications of turning on grid (and other things?)
- when a drag collision occurs, don't ignore the translate, move the object as close as possible

LOW PRIORITY:
- generalize BarMagnetGraphic.InteractivityListener into some type of delegate/decorator
- keep a minimum of N pixels of a draggable graphic within the apparatus panel
- check for unnecessary notification, events and updates
- replace EasyGridBagLayout with SwingUtils.addGridBagComponent
- background color (use PhetLookAndFeel)
- Help/MegaHelp

CLEANUP:
- organize imports
- resize any scaled images
- remove unused images and assets
- save all images using Photoshop's "Save for Web" feature
- remove unused i18n strings
- move test-src programs to examples project

POSSIBLE OPTIMIZATIONS:
- use a profiler (eg JProfile) to identify bottlenecks
- switch to a dynamic clock with median filtering of dt
- switch to offscreen buffer

PHETCOMMON:
- bug: sliders sometimes remain hilited after you roll off them
- bug: hand cursor accidentally picks another object when you release mouse
- bug: ApparatusPanel2 resize problems
- bug: MathUtil.clamp behavior with Double.NaN
- add setComposite to PhetGraphic and its subclasses, use in BarMagnetGraphic
- bug: fix PhetShapeGraphic.contains so that stroke width is taken into account, test with CompassGraphic
- make PhetTextGraphic handle <br>, deprecate PhetMultiLineTextGraphic
- bug: ApplicationModel shouldn't require you to call setInitialModule, should default to first module provided

DONE:
v0r22...
(4/11) - use red color for Challenges
(4/11) - create a ChallengeGraphic, so that challenges are distinct from wiggle mes
(4/11) - make Eletromagnet wiggle me go away if location changes
(4/11) - fix: objects can be dragged off the apparatus panel in certain situations
v0r21...
(4/8) - LightBulbGraphic leaves screen turds (fixed GraphicLayerSet.clear)
(4/8) - minimize memory allocation in LightbulbGraphic
(4/8) - clean up FaradayPanel base class
(4/8) - clear up localization file, remove unused strings
(4/7) - wire up wiggle me's so that they disappear at the appropriate time
(4/7) - add wiggle me's to all modules, but not wired to disappear
(4/7) - create WiggleMeGraphic to use for all wiggle me's
(4/6) - add debug code to draw the bounds of the electromagnet model
(4/6) - add Vector2D.zero
(4/6) - change coil collision bounds to include the coil ends
(4/5) - add a resistor & probes to the Voltmeter indicator
(4/4) - make compass needle do a simple rotation (instead of a flip) when rotational kinematics is disabled
(4/4) - make compass react more quickly when rotational kinematics is enabled
(4/4) - disable "Scale" debug panel, move debug flags into FaradayConfig
(4/4) - lightbulb/voltmeter/electrons should have a lower threshold, values below which are effectively zero
(4/4) - set scale for lightbulb, voltmeter and electrons after meeting with Kathy
(4/4) - add mapping between distance and pixels in DipoleMagnet, currently 1:1
(4/4) - add debugging panel for changing lightbulb, voltmeter and electron scale
(4/4) - encapsulate JSlider + JLabel into ControlPanelSlider UI component
(4/4) - integrate CompassGridRescaler into CompassGridGraphic
(4/4) - delete all rescalers except CompassGridRescaler
(4/4) - modify Faraday algorithm so that there is an emf induced when the #loops in pickup coil changes
(4/1) - use "distance squared" for field strength at pickup coil
(4/1) - rewrite CompassGridRescaler, disable all others
(4/1) - add AbstractMagnet.getStrength that allows you to specify the distance exponent
(4/1) - add a way to change the scale of the voltmeter and lightbulb, for situations where coil and magnet are in fixed positions
(3/31) - fix delta flux calculation, should be based on the surface area of 1 loop, not total coil area
(3/31) - turn off coil edges in Faraday computation to see if light intensity becomes sinusoidal (no change)
(3/31) - center the voltmeter needle screw at the pivot point
(3/31) - make voltmeter needle a bit less lively
(3/31) - remove performance problem in ApparatusPanel2, minimize calls to AffineTransform.createTransformedShape
(3/29) - make all ModelElements compliant with fixed or variable clock (use dt in stepInTime)
v0r20...
(3/29) - add Developer menu to control various internal knobs
(3/29) - optimize getCollisionBounds implementations so that rectangles are reused
(3/29) - fixed CoilGraphic collision bounds
(3/29) - fix area control in PickupCoilPanel so that the area (not the radius) scales correctly
(3/29) - debug mode that shows area, flux and delta flux for the pickup coil
(3/28) - add cache of needle shapes and colors
(3/26) - add FaradayModule.drawBounds, to hide use of DebuggerGraphic
(3/26) - add loop spacing to Coil model, set differently for Source & Pickup coils, remains constant
(3/26) - consolidate code that is duplicated between CompassNeedleGraphic and CompassGridNeedle
(3/26) - flatten static components of CompassGraphic
(3/26) - document all output parameters in method definition and use
(3/26) - reuse mutable vectors wherever possible (eg, DipoleMagnet.getStrength)
(3/25) - optimized memory allocation in all classes (optimization)
(3/25) - add SpacialObserver.getLocation(Point2D) to minimize point allocation (optimization)
(3/25) - reduce number of points created in ElectronGraphic and QuadBezierSpline (optimization)
(3/25) - reduce memory allocation in CoilGraphic.getCollisionBounds (optimization)
(3/25) - use two different images for electron instead of changing alpha (optimization)
(3/25) - reduce amount of memory allocation in DipoleMagnet, reuse mutable objects (optimization)
(3/25) - remove extra notifyObservers from Electron model, causing 2 updates of Electron view per clock tick (optimization)
(3/25) - remove bounds stuff in CompassGridNeedle, not needed (5% optimization)
(3/23) - added a code switch for turning off critical angles in ACPowerSupply and Turbine models
(3/23) - verify that AC hits zero crossings, check with lightbulb (it does)
(3/23) - optimize ACPowerSupply so that it's not doing any work when amplitude is set to zero
(3/23) - move voltmeter tick marks in one pixel so that they look good on Windows
(3/23) - reuse the same AffineTransform each time a compass grid needle needs updating (optimization)
(3/23) - make compass grid use apparatus panel's canvas size to compute its bounds
(3/23) - reduce JAR file size by 50% by saving all image files with Photoshop's "Save for Web" feature.
(3/23) - resize barMagnet.png to eliminate need for scaling, set model size based on image size.
(3/23) - resize electron.png to eliminate need for scaling
(3/23) - move all knowledge of rendering strategy inside compass grid graphic
(3/23) - water wheel needs to hit 0/90/180/270 degree rotation points to hit min/max field strength
(3/23) - remove source files for unused classes: ACPowerSupplyPanel, BatteryPanel, DeveloperPanel
(3/22) - handle for faucet that looks like the side view of a faucet handle, put slider inside handle
(3/22) - make water wheel look like brown wood
(3/22) - set initial positions of compass & field meter in Generator module
(3/22) - make generator pickup coil non-moveable, aligned with turbine magnet
(3/22) - set minimum AC frequency to 5%
(3/22) - put water behind magnet in turbine
(3/22) - limit turbine to 100 RPM
(3/22) - Turbine.getRPM should use the frame rate of the simulation clock
(3/22) - add RPM readout to turbine
(3/22) - add a water wheel graphic to turbine, paddles as wide as widest water stream
v0r19...
(3/21) - cursor that moves across the AC sin wave
(3/18) - make sure that AC hits all peaks and zero-crossing values.
(3/18) - added a debug readout for the current AC amplitude value
(3/17) - flatten all static graphics in voltmeter
(3/17) - revise the Fireworks image used for the voltmeter body
(3/17) - add tick marks around voltmeter display, convert guage to Java shapes
(3/17) - fix case where Field Meter displays B=0.00 and a non-zero theta
(3/17) - label electromagnet current source choices "DC" and "AC"
(3/17) - flatten all static graphic components of AC Power Supply
(3/17) - keep zero-crossing of AC sine wave at origin of the XY axis
(3/17) - fix bug in the number of cycles displayed by AC
(3/17) - add an X/Y axis at center of the AC display
(3/16) - ACSource -> ACPowerSupply throughout the source code & data files
(3/16) - set low end of AC frequency to 10%
(3/16) - label ACSourceGraphic with "AC Power Supply"
(3/16) - add field meter to Transformer & Generator modules
(3/16) - requirements for Generator module (discussed at 3/16 tatus meeting)
v0r18...
(3/16) - used icons in control panels for selecting current source and pickup indicator
(3/16) - change order of controls in Electromagnet and Pickup panels
(3/16) - use same threshold/min/max in all rescalers (as a starting point)
(3/16) - remove rescaler from source coil, shouldn't be rescaled
(3/16) - separate rescaler classes for lightbulb, voltmeter, electrons and compass grid.
(3/15) - draw the AC sine wave so that it fills the "scope" viewport
(3/14) - increase bar magnet strength range to 25-100%
(3/14) - calibrate compass grid
(3/14) - fix: electrons in electromagnet coil loops don't line up with each other (due to ends being shorter)
(3/14) - fix: center of slider knob doesn't line up with ticks on Battery (fix to PhetGraphic.centerRegistrationPoint)
(3/14) - fix: changing number of loops in source coil doesn't affect electromagnet strength
(3/14) - fix: grid needles nearest electromagnet always appear to be full strength, regardless of DC/AC amplitude
(3/14) - fix: field is rotating in opposite direction of turbine magnet
(3/14) - behavior of AC/DC amplitude around "zero" should be smoother
(3/11) - give Turbine its own control panel and FaradyConfig config, instead of reusing BarMagnet
(3/11) - make Voltmeter and observer of the voltage source so that there is symmetry with Lightbulb
(3/11) - fix PickupCoil so that Lightbulb and Voltmeter can use its amplitude
(3/10) - delete all ControlPanel subclasses, assembly is trivial in modules
(3/10) - rename module "Magnet & Coil" to "Pickup Coil"
(3/10) - add spacing between titled panels in the control panel
(3/10) - workaround for zero scaling exception on Windows & Linux
v0r17...
(3/9) - replace deprecated Module constructor with new constructor for all modules
(3/9) - add water faucet to control turbine speed
(3/9) - redo AC graphic
(3/9) - fixed the bounds & registration point of FaradaySlider
(3/8) - first pass at Generator module
(3/8) - no magnetic field (strength=0) should cause the compass to stay in its current location, not move to 0 degrees
(3/8) - add ticks at min/max/zero on battery amplitude slider track (no labels)
v0r16...
(3/7) - show frequency & amplitude graph on the ACSourceGraphic
(3/7) - make AC vary sinusoidally
(3/7) - put controls directly on AC graphic
(3/4) - label battery amplitude in volts, -10 to +10
(3/4) - put amplitude control directly on battery graphic
(3/4) - create a phetgraphic-based slider
(3/3) - change GraphicLayerSet so that it handles mouse events if none of its children does
(2/28) - fix Field Meter so that it doesn't display -0.00 and -180.00 values
(2/28) - redo battery graphic to include a "clip" to hold battery and connect to coil
(2/28) - add skeleton for Generator module
(2/28) - move strength threshold into CompassGridGraphic, adjust value for better look
(2/28) - get rid of minimum ray length on lightbulb
(2/28) - disble rotational kinematics for compass in Electromagnet & Transformer modules
v0r15...
(2/28) - first pass at Transformer module
(2/28) - factor common controls out of control panels so they can be reused across modules
(2/28) - grid doesn't gradually dim as amplitude approaches zero, turns abruptly off at zero
(2/28) - make sure that AC amplitude always hits exactly zero as it modulates
(2/28) - set Electromagnet model size based on size of the coil in the Electromagnet graphic
(2/28) - redo battery graphic
(2/25) - move ICompassGridModule implementation into FaradayModule
(2/25) - bug fix: changing the number of loops when the AC is connected makes the grid disappear (integer math)
(2/25) - major change to how voltage is handled throughout; now a function of maxVoltage and amplitude
(2/25) - bug fix: grid doesn't display until the battery voltage is changed
(2/24) - increase frequency range of the AC source so that the change is easier to see
(2/24) - add "Show Electrons" and "Loops" controls to Electromagnet module
(2/24) - set a maximum position delta in Electron, so that we can see the animation at maximum speeds
(2/24) - give CoilGraphic it's own rescaler to control "look" of electron speed
(2/24) - wire up amplitude & frequency controls to AC source
(2/23) - fix magnet hierarcy, BarMagnet and Electromagnet are subclasses of DipoleMagnet
(2/23) - connect Lightbulb and Voltmeter to an AbstractVoltageSource instead of a PickupCoil
(2/23) - do not embed MAX_EMF in any classes, make it a settable property of an AbstractVoltageSource
(2/23) - created MagneticFieldRescaler, instantiated and used throughout a module
(2/23) - create "rescaler" hierarchy to provide better abstraction over rescaling of value for display
(2/22) - set up control panel for Electromagnet module
(2/22) - add "Show Field" control to Bar Magnet module
(2/22) - put a thicker border around groups of UI controls
(2/21) - add a titled border around Magnet controls in Bar Magnet module
(2/21) - bug fix: update Field Meter when it is made visible
(2/21) - made Rescaler less specific to magnet strength, can use any reference value
(2/21) - move more of the rescaling interface into AbstractMagnet model
v0r14...
(2/18) - after a collision, don't start dragging again until cursor is over the object
(2/18) - remove data smoothing code from PickupCoil, nothing but problems
(2/18) - "spike" emf changes are not being displayed
(2/17) - handle temporary disabling of data smoothing in PickupCoil.updateNow
(2/17) - use ApparatusPanel2.ChangeListener to constrain drags within apparatus panel
(2/17) - use ApparatusPanel2.ChangeListener to determine compass grid size
(2/17) - change magnet strength control to a percentage
(2/17) - change loop area control to a percentage
(2/17) - group Coil items (Loops, Area, Indicator, Show Electrons)
(2/17) - group Magnet items (Strength, Flip Polarity, Show Field, Show Compass)
(2/17) - hide play/pause/stop buttons
(2/17) - add skeleton for "Electromagnet" module
(2/17) - rename "Connect to Coil" -> "Indicator"
(2/17) - values in FieldMeter are still sitting a little high
(2/17) - remove "See Inside" control from Magnet & Coil module
(2/17) - field meter "off" by default in Bar Magnet module
(2/16) - agreed on control labels @ status meeting
(2/16) - add a strength threshold, below which compass grid won't draw needle (optimization)
(2/16) - make CompassGrid use color saturation on black background, alpha on non-black (optimization)
(2/16) - optimize bounds calculation in CompassGridGraphic (optimization)
(2/16) - after resizing the app, objects have incorrect knowledge of the "edges of the apparatus panel"
(2/16) - compass grid does not fill the apparatus panel
(2/16) - implement TranslationListener as an inner class instead of and anonymous class
v0r13...
(2/15) - collision detection between compass and magnet
(2/15) - collision detection between magnet and coil
(2/15) - when electrons jump between curves, they sometimes end up in the wrong position
(2/14) - remove CompassGraphic.setVisible override, not needed
(2/14) - loop radius should be displayed as loop area
(2/14) - fix electron density in coil ends
v0r12...
(2/10) - make electrons jump between front & back layers
(2/10) - make electrons look different in front and back layers
(2/10) - make QuadBezierSpline a subclass of QuadCurve.Double
(2/10) - make electrons move as a function of induced current
(2/10) - don't recreate coil when emf changes, only when physical coil properties change
(2/10) - on/off control for electrons
(2/10) - 25% more space between electrons
(2/10) - add jiggle to voltmeter needle
(2/10) - move localization init into SimStrings
(2/9) - move localization init into PhetApplication
(2/9) - reposition objects in all modules
(2/9) - localize mnemonics for menus and menu items
(2/9) - lightBulb -> lightbulb, voltMeter -> voltmeter
(2/9) - move background color control out of FaradayApplication
(2/9) - beautify Control Panels
(2/8) - disable Developer Controls panel
(2/8) - move grid controls to dialog accessible via Options menu, include a performance warning, change all grids
(2/8) - prevent dragging of stuff out of the apparatus panel viewport
(2/8) - show important "spikes" in induced emf (fixed when I disabling smoothing)
(2/8) - disable emf smoothing (median filter) in coil
(2/8) - tune min/max number of light rays
(2/8) - tune min/max light ray length
(2/8) - light rays should be opaque, thicker stroke
(2/8) - compass "off" by default in "Magnet & Coil" module
(2/8) - grid "off" by default in "Magnet & Coil" module
(2/8) - increase frame rate to 25 fps
v0r11...
(2/7) - basic support for electron animation
(2/7) - convert CompassNeedleGraphic to be a CompositePhetGraphic composed of PhetShapeGraphics
(2/7) - optimize CompassGridGraphic to draw its own needles
(2/4) - adjust top part of coil loop for collision detection & shading
(2/3) - add background color chooser to menubar (ala CCK)
(2/3, 3:26PM) - synchronize phetcommon-HEAD to pick up major "persistence" merge
(2/3) - various adjustments to handle arbitrary orientation of the coil
(2/3) - compute induced emf using average of flux at 3 points (center and 2 edges of coil)
(2/3) - calibrate MAX_EMF to match emf induced when magnet strength, loop radius, #loops are all maximums
(2/3) - simplify some of the Developer Controls (magnet size, needle size)
(2/3) - optimize grid when background is black (don't use alpha)
(2/3) - lower frame rate to 10 fps (performance optimization)
(2/3) - convert all model elements to use radians instead of degrees (performance optimization)
(2/3) - fix Field Meter text field locations (broken by PhetTextGraphic change)
(2/3) - merge HollywoodCompass into Compass, collapse AbstractCompass and Compass
v0r10...
(2/2) - redo lightbulb graphic, looks ratty on black background
(2/2) - fix CoilGraphic so that it's foreground & background look right when magnet passes thru coil near edges
(2/1) - add threshold to Compass.stepInTime to prevent Verlet from hogging CPU
(2/1) - redo coil graphic (constant wire gauge, fix colors)
v0r9...
(1/28) - pull "developer" panel out of BarMagnetControlPanel so that it can be reused elsewhere
(1/28) - grid is not always full of needles (GraphicLayerSet fix)
(1/28) - bounds of light rays are not always correct (GraphicLayerSet fix)
(1/28) - rewrite CompassGraphic to use Shapes instead of image
v0r8...
(1/27) - add color chooser so that folks can experiment with apparatus panel colors
(1/27) - let control panels manipulate model/view components directly instead of via module
(1/27) - one debug control for "Grid spacing" (instead of separate controls for XY spacing)
(1/27) - "probe" to "meter" throughout code
(1/27) - B Field Meter coordinate system: +X right, +Y up, +angle counterclockwise (0 degrees down +X axis)
(1/27) - redo B Field Meter graphic (30% larger fonts, "Magnetic (B) Field" title, i18n)
(1/27) - use compass needle aspect ratio for grid needles
v0r7...
(1/26) - adjust sensitivity of voltmeter and lightbulb
(1/26) - factor out common code for value rescaling
(1/26) - add value rescaling to lightbulb & voltmeter
(1/25) - use median values always, except when changing polarity, #loops or radius
(1/25) - compass on/off control
(1/25) - reduce range of magnet strength to 100-300 Gs
(1/25) - move median filtering into PickupCoil (emf)
(1/25) - use one image for bar magnet, set transparency using g2.setComposite
(1/24) - use CCK graphic for lightbulb illumination
(1/24) - use median values only when magnet or coil are being dragged
(1/21) - separate PickupCoilGraphic into foreground & background layers
(1/21) - rescale alpha values in compass grid to account for magnet strength and field dropoff
(1/21) - redo BFieldProbe graphic, add crosshairs
(1/21) - redo voltmeter graphic, add "volts" label
v0r6...
(1/20) - when flipping polarity, jiggle the compass so that it starts moving sooner
(1/20) - control to turn BFieldProbe on/off
(1/20) - "see inside magnet" feature
(1/20) - no change in EMF when point moves around inside magnet (THIS IS CORRECT! Mike)
(1/20) - rename module Compass Grid -> Bar Magnet
(1/20) - rename module Bar Magnet -> Magnet & Coil
(1/20) - redo compass graphic
(1/20) - use Ron's enhancements to ControlPanel
v0r5...
(1/19) - sample graphic for electron "look"
(1/19) - draw pickup coil correctly when loop area is changed
(1/19) - redo coil graphic, more of a tilt, thicker wire, copper/brown color
(1/18) - averaging of values so that lightbulb & voltmeter behave smoothly
(1/18) - determine the role of "current" in the model
(1/14) - fix PickupCoil.stepInTime to properly set EMF and induced current
(1/14) - model elements for lightbulb and voltmeter
(1/13) - add inertia to compass needle
v0r4...
(1/12) - dipole stuff is screwed up when magnet polarity is flipped
(1/11) - add B-field probe
(1/6) - nail down semantics of magnet "strength"
(1/5) - equation for the magnetic field of a dipole
v0r3...
(1/4) - how to populate resized apparatus panel with grid?
(1/3) - compass
(1/3) - wires connecting loop to meter/bulb
(1/3) - alpha channel in lightbulb emission
(12/28) - change "loop area" control to be value-based, not scale-based

NO:
(4/8) - make wiggle me's fade out instead of blinking off (no one asked for this, different than other sims)
(4/6) - put compass in top layer so it doesn't get hidden behind larger objects (compass needs to move through coil)
(4/5) - lightbulb flashes the first time that you visit each module (Carl likes this, leave it in)
(4/4) - eliminate AffineTransform from BarMagnet.getStrength(Point2D) and PickupCoil.updateEmf (not possible)
(4/4) - add scaling of pixel-space (not necessary, but would be done in DipoleMagnet.getStrengthInside)
(3/29) - draw needles using Graphics.fillPolygon (no performance improvement)
(3/29) - transparent bar magnet layer so that field meter looks like it's inside it (no one except Ron asked for this feature)
(3/29) - redo Turbine model, it should not extend BarMagnet (fine as is for this simulation)
(3/24) - cache grid needles at N-degree angles to eliminate rotation transform (rotation is not the problem, fill is the problem)
(3/24) - draw grid needles as images instead of shapes (no improvement using images)
(3/24) - explicitly set the initial capacity (# coordinates) in the compass needle paths (no performance improvement)
(3/24) - explicitly set the winding rule for the compass needle paths (no performance improvement)
(3/23) - draw the needles into a buffered image, then blit it to the screen (slower)
(3/23) - flatten static components of TurbineGraphic (water needs to be between wheel and magnet)
(3/17) - add playback controls to relevant modules (code & semantics do not support this on a per-Module basis)
(3/16) - collision detection in Generator & Transformer modules (fine as is)
(2/23) - handle rescaling in VoltmeterGraphic instead of in Voltmeter model (rotational kinematics of needle requires rescaling)
(2/17) - disable "See Inside Magnet" control when grid is off (control was removed)
(2/17) - change sliders to "ModelSlider" used by other simulations (No - not used by many others, has problems)
(2/15) - encapulate all rescaling of emf into one place (already encapsulated in Rescaler)
(2/10) - PickupCoilGraphic leaves screen turds (ApparatusPanel2 problem)
(2/10) - make lightbulb ramp up/down instead of immediate on/off (looks fine as is)
(2/7) - repaint compass grid when background color changes, in case we're switching rendering strategies (no longer necessary)
(1/28) - use offscreen buffering in apparatus panel to remove screen turds? (found GraphicLayerSet problem)

===============================================================================