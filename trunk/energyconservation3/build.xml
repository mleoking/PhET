<project name="General Ant Build Script" default="Publish Executables" basedir=".">

    <!--  Set ant output directories.  -->
    <property name="ant.output" value="ant_output"/>
    <property name="ant.classes" location="${ant.output}/classes"/>
    <property name="ant.jars" location="${ant.output}/jars"/>
    <property name="ant.javadoc" location="${ant.output}/javadoc"/>
    <property name="ant.lib" location="${ant.output}/lib"/>

    <!--    Set current sister directories, for backup and release data. -->
    <property name="backup" location="../backup"/>
    <property name="releases" location="../releases"/>

    <!--  Set up child directories, for during the build.  -->
    <property name="src" location="src"/>
    <property name="tests-src" location="test-src"/>
    <property name="data" location="data"/>

    <property file="build.properties"/>
    <property file="local.properties"/>
    <property file="build.time.stamp" location="${data}"/>

    <property name="build.number.txt" value="${data}/${distname}.build.number"/>
    <property name="timestamp.name" value="${data}/${distname}.build.time.stamp"/>

    <property name="proguard-file" value="ec3.pro"/>

    <property name="phet-root" value="/Net/www/webdata/htdocs/UCB/AcademicAffairs/ArtsSciences/physics/phet"/>
    <property name="dev-dir" value="${phet-root}/${dev-path}/${dev-version}"/>

    <taskdef resource="proguard/ant/task.properties"
             classpath="proguard3.4/lib/proguard.jar"/>

    <taskdef name="maverick-ssh"
             classname="com.sshtools.ant.Ssh"
             classpath="maverick-ant/maverick/lib/maverick-ant.jar"/>

    <description>
        PhET Build File.
    </description>

    <target name="init">
        <tstamp/>
    </target>

    <target name="Clean"
            description="clean up">
        <delete dir="${ant.classes}"/>
        <delete dir="${ant.jars}"/>
        <delete dir="${ant.javadoc}"/>
        <delete dir="${ant.lib}"/>
    </target>

    <target name="Compile" depends="init, Clean"
            description="compile the source ">
        <mkdir dir="${ant.classes}"/>
        <javac srcdir="${src}:timeseries/src:piccolo/src:piccolo-phet/src:piccolo/extras:phetcommon/src"
               excludes="edu/umd/cs/piccolox/swt/*.java,edu/colorado/phet/timeseries/plot/*.java"
               classpath="jfreechart/lib/jfreechart-1.0.0.jar:jfreechart/lib/jcommon-1.0.0.jar:
               jfreechart/lib/gnujaxp.jar:jfreechart/lib/junit.jar:jfreechart/lib/servlet.jar"
               destdir="${ant.classes}"/>
        <!--    Uncomment the following line to add test classes to the output jar.    -->
        <!--        <javac srcdir="${tests-src}" destdir="${classes}"/>-->
    </target>

    <target name="Generate Build Info">
        <buildnumber file="${build.number.txt}"/>
        <tstamp>
            <format property="jar.creation.time" pattern="d-MMMM-yyyy h:mm aa" locale="en" timezone="MST"></format>
        </tstamp>
        <echo file="${timestamp.name}" message="${jar.creation.time}"></echo>
    </target>

    <target name="Generate Jar" depends="Compile"
            description="generate the distribution">
        <!-- Create the distribution directory -->
        <delete dir="${ant.jars}"/>
        <mkdir dir="${ant.jars}"/>
        <antcall target="Generate Build Info"/>
        <property file="${build.number.txt}"/>
        <jar destfile="${ant.jars}/${distname}.jar">
            <fileset dir="${ant.classes}"/>
            <fileset dir="${data}"/>
            <fileset dir="phetcommon/data"></fileset>
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
        </jar>
    </target>

    <!--<target name="Publish Executables" depends="Generate Jar"-->
    <!--description="generate executables, jar files, lib files, a batchfile">-->
    <!--<mkdir dir="${releases}"/>-->
    <!--<property file="${build.number.txt}"/>-->
    <!--<property name="destdir" value="${releases}\${distname}${version}_exec-build-${build.number}"/>-->
    <!--<mkdir dir="${destdir}"/>-->
    <!--<copy todir="${destdir}">-->
    <!--<fileset dir="${ant.jars}"/>-->
    <!--</copy>-->
    <!--<copy todir="${destdir}">-->
    <!--<fileset dir="." casesensitive="yes">-->
    <!--<include name="*.jnlp"/>-->
    <!--</fileset>-->
    <!--</copy>-->
    <!--<mkdir dir="${destdir}/lib"/>-->
    <!--<copy todir="${destdir}/lib">-->
    <!--<fileset dir="jfreechart/lib"/>-->
    <!--</copy>-->
    <!--<exec dir="${destdir}" executable="${explorer}">-->
    <!--<arg line="${destdir}"/>-->
    <!--</exec>-->
    <!--</target>-->

    <target name="ProGuard" depends="Generate Jar">
        <proguard configuration="${proguard-file}"/>
    </target>

    <target name="Update JNLP">
        <copy todir="ant_output/jnlp" overwrite="yes">
            <fileset file="ec3.jnlp"/>
            <filterset>
                <filter token="VERSION" value="${dev-version}"/>
            </filterset>
        </copy>
    </target>

    <target name="Post Dev">
        <maverick-ssh host="${ssh-host}"
                      username="${username}"
                      password="${password}"
                      version="2">
            <sftp action="mkdir"
                  remotedir="${dev-dir}"/>
            <sftp action="put" remotedir="${dev-dir}" verbose="true">
                <fileset file="ant_output/jars/ec3-pro.jar"/>
                <fileset file="ant_output/jnlp/ec3.jnlp"/>
            </sftp>
        </maverick-ssh>
    </target>

    <target name="Build and Deploy" depends="ProGuard,Update JNLP,Post Dev"/>
</project>