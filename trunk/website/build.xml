<!--

This build file is specific to the PhET website. However, it borrows some 
build-related libraries from the simulations-java project.

-->
<project name="PhET Website Utility Script" default="deploy to live server" basedir=".">
    <!-- Website properties -->
    <property name="dir.website" value="${basedir}" />

    <!-- Deployment properties -->
    <property name="deploy.live_server.name" value="tigercat.colorado.edu" />
    <property name="deploy.test_server.name" value="192.168.42.103" />

    <!-- Properties for deploy output-->
    <property name="deploy.live_server.path" value="/web/htdocs/phet/new" />
    <property name="deploy.live_server.url" value="http://phet.colorado.edu/new/" />
    <property name="deploy.test_server.path" value="/var/www/phet/new" />
    <property name="deploy.test_server.url" value="http://${deploy.test_server.name}/new/" />

    <!-- Build tools -->
    <property name="dir.build-tools" value="${basedir}/../simulations-java/build-tools/" />

    <!-- Support jars -->
    <property name="jar.ant-contrib" value="${dir.build-tools}ant-contrib/ant-contrib.jar" />
    <property name="jar.antform" value="${dir.build-tools}antform/lib/antform.jar" />
    <property name="jar.maverick" value="${dir.build-tools}maverick/lib/maverick-ant.jar" />

    <!-- Ant-Contrib tasks definition -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${jar.ant-contrib}" />
        </classpath>
    </taskdef>

    <!-- AntForm task definition -->
    <taskdef name="antform" classname="com.sardak.antform.AntForm" classpath="${jar.antform}" />

    <!-- Maverick task definition -->
    <taskdef name="maverick-ssh" classname="com.sshtools.ant.Ssh" classpath="${jar.maverick}" />

    <target name="_read-username-and-password">
        <if>
            <not>
                <and>
                    <isset property="deploy.username" />
                    <isset property="deploy.password" />
                </and>
            </not>
            <then>
                <echo message="Gathering username and password from user" />

                <!-- If the username and password are not set, get them now: -->
                <antform title="Deployment Host Login" width="550" height="300">
                    <label>Please enter your username and password that you use to login to the deployment host machine
                        ${deploy.server.name}.
                    </label>

                    <textProperty label="Username:" property="deploy.username" required="true" focus="true" />
                    <textProperty label="Password:" property="deploy.password" required="true" password="true" />
                </antform>
            </then>
        </if>
    </target>

    <target name="deploy to live server" description="This task deploys the live website." depends="_read-username-and-password">
        <maverick-ssh host="${deploy.live_server.name}" username="${deploy.username}" password="${deploy.password}" version="2">
            <!-- Make the remote directory: -->
            <sftp action="mkdir" remotedir="${deploy.live_server.path}" verbose="true" />

            <!-- Put all files to the remote directory: -->
            <sftp action="put" remotedir="${deploy.live_server.path}" verbose="true">
                <fileset dir="${dir.website}">
                    <exclude name=".svn" />
                    <exclude name="**/cached-*/*" />
                    <exclude name="admin/login-info.php" />
                </fileset>
            </sftp>

            <!-- Finally, modify the permissions so everyone can read & execute, and group & owner can write: -->
            <exec cmd="chmod -R 775 ${deploy.live_server.path}" />
        </maverick-ssh>
    </target>

    <target name="deploy to test server" description="This task deploys the website to a test server." depends="_read-username-and-password">
        <maverick-ssh host="${deploy.test_server.name}" username="${deploy.username}" password="${deploy.password}" version="2">
            <!-- Make the remote directory: -->
            <sftp action="mkdir" remotedir="${deploy.test_server.path}" verbose="true" />

            <!-- Put all files to the remote directory: -->
            <sftp action="put" remotedir="${deploy.test_server.path}" verbose="true">
                <fileset dir="${dir.website}">
                    <exclude name=".svn" />
                    <exclude name="**/cached-*/*" />
                    <exclude name="admin/login-info.php" />
                </fileset>
            </sftp>

            <!-- Finally, modify the permissions so everyone can read & execute, and group & owner can write: -->
            <exec cmd="chmod -R 775 ${deploy.test_server.path}" />
        </maverick-ssh>
    </target>
</project>