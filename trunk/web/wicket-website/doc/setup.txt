
* Software Requirements

1) Apache Tomcat 6.x  (could in the future be moved to different server software, but this is used right now)
2) PostgreSQL (preferably 8.x, I'm using 8.4)
3) Apache HTTPD 2.2.x (untested on 2.0 or lower, but would probably run)
4) Apache Tomcat Connector (mod_jk, http://tomcat.apache.org/connectors-doc/ and tested with 1.2.28)

* Installation

Not covered here. Used http://www.ubuntugeek.com/tomcat-6-installation-on-ubuntu-feisty.html for Tomcat (ignoring the
installing-java part), and used PostgreSQL's default installer. Thus $CATALINA_HOME$ is /usr/share/tomcat6 on
phet-server and my development machines, and PostgreSQL is installed in /opt/PostgreSQL/8.4. Apache HTTPD can also use
a standard installation, many documents are available online (or for linux, just install the packages).
mod_jk can be downloaded from the above mentioned website, installed as mod_jk.so what is usually
/usr/lib/apache2/modules/ and loaded as a module in httpd.conf.

* PostgreSQL configuration

I will use "website" for now as the name of the database.

Create the database:
/opt/PostgreSQL/8.4/bin/createdb --encoding=UTF-8 website

You can also create a specific user to access the database with, or use the default "postgres" user.

To initialize the database with a dump file (ending in .sql, most likely wicket-website/postgresql-dump.sql):
/opt/PostgreSQL/8.4/bin/psql -U <username> website < /path/to/dump.sql

* How to set up the JNDI datasource within Tomcat's $CATALINA_HOME$/conf/context.xml:

Add the following inside the <context> element in context.xml, and replace the username, password, and any other
settings for correct access to the database (like website with the database name, localhost with the location of the
database).

    <Resource name="jdbc/phet"
              global="jdbc/phet"
              auth="Container"
              type="javax.sql.DataSource"
              username="XXXXX"
              password="YYYYY"
              driverClassName="org.postgresql.Driver"
              url="jdbc:postgresql://localhost/website"
              maxActive="30"
              maxIdle="10"/>

* Apache HTTPD configuration

Whether using straight hosting or virtual hosts, a particular document root should be chosen that will hold all of the
"static" files, like the sims, publications and workshops directories. /var/www/wicket will be used in this example.

mod_jk should be installed, loaded, and jk globals should be specified in httpd.conf. ex:
LoadModule jk_module /usr/lib/apache2/modules/mod_jk.so
JkWorkersFile /etc/apache2/workers.properties
JkShmFile /var/log/apache2/mod_jk.shm
JkLogFile /var/log/apache2/mod_jk.log
JkLogLevel info
JkLogStampFormat "[%a %b %d %H:%M:%S %Y] "

workers.properties will contain information about how to communicate with Tomcat (IE host / port). ex:
worker.list=worker1
worker.worker1.type=ajp13
worker.worker1.host=localhost
worker.worker1.port=8009

Furthermore, for the particular host / virtual host, the following parameters should be specified. ex:
DocumentRoot /var/www/wicket
JkMount /* worker1
JkUnMount /sims/* worker1
JkUnMount /publications/* worker1
JkUnMount /workshops/* worker1

Apache HTTPD will need to be restarted after those changes.

* Tomcat configuration

In $CATALINA_HOME$/conf/server.xml, make sure the Connector elements being used have useBodyEncodingForURI="true",
otherwise UTF-8 characters sent through translation that aren't in the Basic Multilingual Plane will be clobbered.
Specifically, the 8009-port connector will be used.

For a development machine, add this line to $CATALINA_HOME$/conf/context.xml within the Context element:
<Parameter name="configuration" value="development" override="false"/>

For a production machine, use this line instead:
<Parameter name="configuration" value="deployment" override="false"/>

The configuration parameter above will trigger either the "development" or "deployment" mode for Wicket.

An additional configuration parameter
should be added to context.xml of the form below, so that the website knows the location of the HTTPD document root:
<Parameter name="phet-document-root" value="/var/www/wicket" override="true"/>

Additionally, the temp dir (usually $CATALINA_HOME$/temp) should definitely be writable by the Tomcat daemon, since
this is the location of EHCache's temporary files.

Also the appropriate JDBC driver should be copied into $CATALINA_HOME$/lib/
    (ie trunk/web/wicket-website/contrib/postgresql-8.3-604.jdbc4.jar).
    

* IDE setup

Tomcat can be used with Eclipse and Intellij for testing. For Intellij, this includes creating a Web facet. The
following directories are important:

wicket-website/root: content root, so everything under this should be placed within the root directory of the WAR file that
    is deployed.
wicket-website/src/java: source root, so these classes

Additionally, the following other sources should be added to the WAR:
phetcommon
(phetcommon's data directory)


