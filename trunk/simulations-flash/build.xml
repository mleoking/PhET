<!--
================================================================================

  PhET buildfile for Flash simulation
  
================================================================================
-->
<project name="PhET Flash buildfile" default="create-test-jar" basedir=".">
	
	<!-- read local properties file -->
	<property file="build-local.properties"/>
	
	<!-- OK to change these here, or set them in build-local.properties -->
    <property name="sim" value="YOUR_SIM_NAME"/>
    <property name="language" value="YOUR_LANGUAGE_CODE"/>
	<property name="prod-username" value="YOUR_PROD_USERNAME"/>
	<property name="prod-password" value="YOUR_PROD_PASSWORD"/>
	<property name="dev-username" value="YOUR_DEV_USERNAME"/>
	<property name="dev-password" value="YOUR_DEV_PASSWORD"/>
	<property name="svn-username" value="YOUR_SVN_USERNAME"/>
	<property name="svn-password" value="YOUR_SVN_PASSWORD"/>
	<property name="flash-launcher-extra-args=" value="-dev"/>
		
    <!-- DO NOT change these -->
    <property name="rootDir" value="."/>
    <property name="flash-launcher-src" location="${rootDir}/flash-launcher/src"/>
    <property name="build" location="${rootDir}/build"/>
    <property name="jar-inputs" location="${build}/jar-inputs"/>
    <property name="build-tools" location="${rootDir}/build-tools"/>
	<property name="dev-server" value="spot.colorado.edu"/>
    <property name="prod-server" value="tigercat.colorado.edu"/>
	<property name="dev-rootdir" value="/htdocs/physics/phet/dev"/>
	<property name="prod-rootdir" value="/web/htdocs/phet"/>
	<property name="prod-flash-launcher-dir" value="/web/htdocs/phet/phet-dist/flash-launcher"/>

	<!-- deploys flash-launch to the production server -->
	<target name="deploy-flash-launcher" depends="clean-build">

        <mkdir dir="${build}"/>
    	<mkdir dir="${jar-inputs}"/>

    	<!-- create FlashLauncher class files -->
		<javac srcdir="${flash-launcher-src}" destdir="${jar-inputs}" source="1.4" target="1.4" debug="true" debuglevel="lines, vars, source"/>

    	<!--copy the html template -->
        <copy file="${rootDir}/flash-launcher/data/flash-launcher-template.html" todir="${jar-inputs}"/>

	    <!-- create a jar so we have a manifest -->
        <jar jarfile="${build}/flash-launcher.jar" basedir="${jar-inputs}">
            <manifest>
                <attribute name="Main-Class" value="edu.colorado.phet.flashlauncher.FlashLauncher"/>
            </manifest>
        </jar>

	    <!-- unpack the jar -->
		<unjar src="${build}/flash-launcher.jar" dest="${build}"/>

		<!-- delete what we don't need -->
		<delete dir="${jar-inputs}"/>
		<delete file="${build}/flash-launcher.jar"/>

	    <!-- scp the files to the production server -->
		<scp sftp="true" todir="${prod-username}:${prod-password}@${prod-server}:${prod-flash-launcher-dir}">
		    <fileset dir="${build}"/>
		</scp>

	</target>

	<!-- deploys a sim to the dev server -->
	<target name="deploy-to-dev" depends="clean-build">
		<!-- increment version.dev -->
		<!-- rebuild html files for all languages so that @VERSION@ is correct -->
		<!-- check in ${sim}/deploy/${sim}.properties -->
	    <!-- scp all files to sim dir on dev server -->
	</target>

	<!-- deploys a sim to the production and dev servers -->
	<target name="deploy-to-prod" depends="clean-build">
		<!-- set version.dev to 0 -->
		<!-- increment version.minor -->
		<!-- rebuild html files for all languages so that @VERSION@ is correct -->
		<!-- check in ${sim}/deploy/${sim}.properties -->
	    <!-- scp all files to sim dir on dev server -->
	    <!-- scp all files to sim dir on production server -->
	</target>

	<!-- creates the version number for a new major release -->
	<target name="create-major-version-number">
		<!-- read sim's properties file -->
		<!-- increment major number, set minor and dev to zero, figure out revision -->
		<!-- write to sim's properties file -->
		<!-- check in to svn -->
	</target>

	<!-- creates the version number for a new minor release -->
	<target name="create-minor-version-number">
		<!-- read sim's properties file -->
		<!-- increment minor number, set dev to zero, figure out revision -->
		<!-- write to sim's properties file -->
		<!-- check in to svn -->
	</target>

    <!-- creates the version number for a new dev release -->
    <target name="create-dev-version-number">
		<!-- read sim's properties file -->
		<!-- increment dev number, figure out revision -->
		<!-- write to sim's properties file -->
		<!-- check in to svn -->
	</target>

	<target name="rebuild-all-html-files">
		<!-- for every xml file, create html file -->
		<!-- check html files into svn -->
	</target>

	<target name="integrate-translations">
		<!-- for each xml file... -->
		<!-- generate html file -->
		<!-- check in xml and html files -->
		<!-- scp xml and html files to production server -->
	</target>

	<!-- creates a runnable JAR file for testing a Flash sim, puts it in build directory -->
    <target name="create-test-jar" depends="clean-build">

        <mkdir dir="${build}"/>
    	<mkdir dir="${jar-inputs}"/>

    	<!-- create FlashLauncher class file -->
        <javac srcdir="${flash-launcher-src}" destdir="${jar-inputs}"/>

    	<!-- copy swf file -->
        <copy file="${rootDir}/simulations/${sim}/deploy/${sim}.swf" todir="${jar-inputs}"/>

        <!-- copy xml files -->
        <copy todir="${jar-inputs}">
            <fileset dir="${rootDir}/simulations/${sim}/deploy/" includes="${sim}-strings_*"/>
        </copy>

    	<!--copy the html template -->
        <copy file="${rootDir}/flash-launcher/data/flash-launcher-template.html" todir="${jar-inputs}"/>

    	<!-- create args file -->
        <echo file="${jar-inputs}/flash-launcher-args.txt" message="${sim} ${language} ${flash-launcher-extra-args}"/>

    	<!-- copy properties file -->
        <copy file="${rootDir}/simulations/${sim}/deploy/${sim}.properties" todir="${jar-inputs}"/>

    	<!-- create jar -->
        <jar jarfile="${build}/${sim}_${language}.jar" basedir="${jar-inputs}">
            <manifest>
                <attribute name="Main-Class" value="edu.colorado.phet.flashlauncher.FlashLauncher"/>
            </manifest>
        </jar>

    	<!-- delete the files that were added to the jar -->
    	<delete dir="${jar-inputs}"/>
                	
    </target>
	
	<!-- creates an html file for a specified sim and language, puts it in the sim's deploy directory -->
	<target name="create-html">
		<property file="${rootDir}/simulations/${sim}/deploy/${sim}.properties"/>
        <filter token="SIM" value="${sim}"/>
        <filter token="LANGUAGE" value="${language}"/>
		<filter token="VERSION" value="${version.major}.${version.minor}.${version.dev} (${version.revision})"/>
        <copy file="${rootDir}/flash-launcher/data/flash-launcher-template.html" tofile="${rootDir}/simulations/${sim}/deploy/${sim}_${language}.html" filtering="true"/>
		<!-- TODO: check the file into SVN -->
    </target>
	
	<!-- cleans the build directory -->
	<target name="clean-build">
		<!-- all files and subdirectories of build, but not build itself -->
		<delete includeemptydirs="true">
		    <fileset dir="${build}" includes="**/*"/>
		  </delete>
	</target>
	
</project>