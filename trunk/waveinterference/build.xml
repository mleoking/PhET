<project name="General Ant Build Script" default="Publish Executables" basedir=".">

    <!--  Set ant output directories.  -->
    <property name="ant.output" value="ant_output"/>
    <property name="ant.classes" location="${ant.output}/classes"/>
    <property name="ant.jars" location="${ant.output}/jars"/>
    <property name="ant.javadoc" location="${ant.output}/javadoc"/>
    <property name="ant.lib" location="${ant.output}/lib"/>
    <property name="ant.jnlp" location="${ant.output}/jnlp"/>

    <!--    Set current sister directories, for backup and release data. -->
    <property name="backup" location="../backup"/>
    <property name="releases" location="../releases"/>

    <property file="build.properties"/>
    <property file="local.properties"/>
    <property file="build.time.stamp" location="data"/>

    <property name="build.number.txt" value="data/${distname}.build.number"/>
    <property name="timestamp.name" value="data/${distname}.build.time.stamp"/>

    <property name="phet-ssh-root" value="/Net/www/webdata/htdocs/UCB/AcademicAffairs/ArtsSciences/physics/phet"/>
    <property name="dev-parent" value="${phet-ssh-root}/${dev-path}"/>
    <property name="dev-dir" value="${dev-parent}/${dev-version}"/>

    <taskdef resource="proguard/ant/task.properties" classpath="antutil-dir/lib/proguard.jar"/>

    <taskdef name="maverick-ssh" classname="com.sshtools.ant.Ssh" classpath="antutil-dir/lib/maverick-ant.jar"/>

    <target name="init">
        <tstamp/>
    </target>

    <target name="Clean"
            description="clean up">
        <delete dir="${ant.classes}"/>
        <delete dir="${ant.jars}"/>
        <delete dir="${ant.javadoc}"/>
        <delete dir="${ant.lib}"/>
    </target>

    <target name="Compile" depends="init, Clean">
        <mkdir dir="${ant.classes}"/>
        <javac srcdir="${build-src}"
               excludes="${build-excludes}"
               classpath="${build-classpath}"
               source="1.4"
               destdir="${ant.classes}"
                />
    </target>

    <target name="Generate Build Info">
        <buildnumber file="${build.number.txt}"/>
        <tstamp>
            <format property="jar.creation.time" pattern="d-MMMM-yyyy h:mm aa" locale="en" timezone="MST"/>
        </tstamp>
        <echo file="${timestamp.name}" message="${jar.creation.time}"></echo>
    </target>

    <target name="Generate Jar" depends="Compile"
            description="generate the distribution">
        <!-- Create the distribution directory -->
        <delete dir="${ant.jars}"/>
        <mkdir dir="${ant.jars}"/>
        <antcall target="Generate Build Info"/>
        <property file="${build.number.txt}"/>
        <jar destfile="${ant.jars}/${distname}.jar">
            <fileset dir="${ant.classes}"/>
            <fileset dir="data">
                <exclude name="**/*Thumbs.db"/>
            </fileset>
            <fileset dir="phetcommon-dir/data"/>
            <fileset dir="piccolo-phet-dir/data"/>
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
        </jar>
    </target>

    <target name="ProGuard" depends="Generate Jar">
        <proguard configuration="${proguard-file}"/>
    </target>

    <target name="Update-JNLP">
        <copy todir="ant_output/jnlp" overwrite="yes">
            <fileset file="${jnlp-filename}"/>
            <filterset>
                <filter token="VERSION" value="${dev-version}"/>
                <filter token="MAIN-CLASS" value="${main.class}"/>
            </filterset>
        </copy>
    </target>

    <target name="Post">
        <maverick-ssh host="${ssh-host}"
                      username="${username}"
                      password="${password}"
                      version="2">
            <sftp action="mkdir"
                  remotedir="${dev-dir}"/>
            <sftp action="put" remotedir="${dev-dir}" verbose="true">
                <fileset file="${ant.jars}/${app-jar-file}"/>
                <fileset file="${ant.jnlp}/${jnlp-filename}"/>
                <fileset file="screenshot.gif"/>
                <fileset file="README"/>
                <fileset file="todo.txt"/>
                <fileset file="changes.txt"/>
            </sftp>
        </maverick-ssh>
    </target>

    <target name="Post Docs Only">
        <maverick-ssh host="${ssh-host}"
                      username="${username}"
                      password="${password}"
                      version="2">
            <sftp action="mkdir"
                  remotedir="${dev-parent}"/>
            <sftp action="put" remotedir="${dev-dir}" verbose="true">
                <fileset file="todo.txt"/>
                <fileset file="changes.txt"/>
            </sftp>
        </maverick-ssh>
    </target>

    <target name="Build and Deploy" depends="ProGuard,Update-JNLP,Post"/>

    <!-- tag the source tree with tag -->
    <target name="test-cvs-tag"
            description="Tags source tree in CVS, from a given branch with the given tag.">
        <echo message="tagging source from CVS..."/>
        <cvs cvsRoot=":ssh:samreid:${cvspassword}$@cvs.sourceforge.net:/cvsroot/phet"
             command="tag -b waveinterference-test-tag-4-6-06 src"/>
        <echo message="...done"/>
    </target>

</project>