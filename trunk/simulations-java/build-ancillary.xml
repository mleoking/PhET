<!-- 
================================================================================

    PhET ancillary buildfile
    
    This Ant buildfile contains information that is ancillary to the production build process.
    Targets herein are a mixture of secondary targets and targets that are not intended to 
    be called directly.  By convention, targets that are no intended to be called directly
    are prefixed with an underscore.
    
    The primary targets can be found in build.xml, which imports this buildfile. 
    
================================================================================
-->
<project name="PhET ancillary buildfile" basedir=".">

	<!-- =================================================================== -->
	<!-- Public properties                                                   -->
	<!-- =================================================================== -->

	<!-- Load user-specified properties from this file. -->
	<!-- Do this first to allow overrides -->
	<!-- See build.xml for documentation of specific properties. -->
	<property file="build-local.properties"/>

	<!-- =================================================================== -->
	<!-- Private properties, do NOT change or override these                 -->
	<!-- =================================================================== -->

	<!-- structure of the PhET codebase.-->
	<property name="dir.build-tools"                value="${basedir}/build-tools"/>
	<property name="dir.contrib"                    value="${basedir}/contrib"/>

    <property name="dev.server.dir" value=""/>
    <property name="increment.versions" value="true"/>

	<!-- structure of the codebase for PhET's custom Ant task -->
	<property name="ant-output"             location="ant_output"/>
	<property name="phetbuild-classes-dir"  location="${ant-output}/phetbuild/classes"/>
	<property name="proguard.jar"           location="${dir.build-tools}/proguard/lib/proguard.jar"/>
	<property name="jsch.jar"               location="${dir.build-tools}/jsch/jsch.jar"/>
	<property name="apache.commons.lang.jar" location="${dir.build-tools}/commons-lang/commons-lang.jar"/>
	<property name="phetbuild-src"          location="${dir.build-tools}/phet-build/src"/>
	<property name="imageio-src"            location="${dir.build-tools}/image4j/src" />

	<property name="phet.version"           value=""/>
	<property name="phet.src.distribution"  value="${basedir}/deploy/phet-src.zip"/>

	<!-- PhET task implementations -->
	<property name="phetbuild-classpath"            value="${phetbuild-classes-dir};${proguard.jar};${apache.commons.lang.jar};${jsch.jar}"/>
	<property name="phet-build-gui-classname"       value="edu.colorado.phet.build.java.PhetBuildGUITask"/>

    <!-- =================================================================== -->
	<!-- Internal targets, do NOT call directly                              -->
	<!-- =================================================================== -->

	<!-- TODO: PLEASE DOCUMENT ME -->
	<target name="_clean-phet-build">
		<delete dir="${phetbuild-classes-dir}"/>
	</target>

	<!-- TODO: PLEASE DOCUMENT ME -->
	<target name="_compile-phet-build">
		<mkdir dir="${phetbuild-classes-dir}"/>

		<javac srcdir="${phetbuild-src}:${dir.build-tools}/securechannelfacade/src/main/java" destdir="${phetbuild-classes-dir}" classpath="${proguard.jar}:${apache.commons.lang.jar};${jsch.jar}" debug="true"
               debuglevel="lines,source">
			<src path="${phetbuild-src}" />
			<src path="${imageio-src}" />
		</javac>
	</target>

    <!-- TODO: PLEASE DOCUMENT ME -->
    <target name="_build-phet-build" depends="_clean-phet-build, _compile-phet-build" />

    	<!-- TODO: PLEASE DOCUMENT ME -->
	<target name="_init" depends="_declare-phet-build-tasks"/>

	<!-- defines custom Ant tasks that must be compiled at build time -->
	<target name="_declare-phet-build-tasks" depends="_build-phet-build">
		<taskdef name="phet-build-gui"
                 classname="${phet-build-gui-classname}"
                 classpath="${phetbuild-classpath}"/>
    </target>

</project>
