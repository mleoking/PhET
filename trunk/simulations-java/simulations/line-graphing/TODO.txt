TODO list for line-graphing

DEADLINES

DESIGN
- revisit the placement algorithm for equations on graphed lines, should it be on same end of line as slope manipulator? or in Q1 or Q4 (as is) so that it's close to interactive line?
- names for the 3 sims in this project ("Graphing: Lines", "Graphing: Linear Inequalities", "Graphing: Absolute Value")
- navigation game
- should intercept manipulator be same color as point manipulator? It's a special-case of point.
- Game: do we need to horizontally align relops in equation boxes? (I think not)
- Game: titles on equation boxes
- Game: for GTL challenges, showing "your line" in simplified form means that it may not match the line manipulators, creates a disconnect

HIGH
- Game: "Place 3 Points" challenge

MEDIUM
- get rid of EquationNode.setPaintDeep and LineNode.updateColor, make LineNode immutable, use a new instance when its color changes
- add support for fractional y-intercept in equations (only when y-intercept is non-interactive)
- move things to EquationNode base class (adding UndefinedSlopeIndicatorNode, creating slope nodes,...)
- sort out duplication in Challenge and ChallengeNode hierarchies (introducing booleans for what's interactive should collapse a lot of things)

LOW
- review usages of Line.simplified
- layout of EquationNode subclasses is complicated. Is there a better way?
- add "verbose" mode to equation code, in case we want to show exactly what is in model
- use of Line.color is a bit of a mess, and makes it difficult to manage line lists
- repackage, in anticipation of having 3 sims in this project
- EquationNode.setPaintDeep is buggy for dynamic or interactive equations

DEVELOPER CONTROLS
- replay the current Game challenge
- "resample" to change the challenges for the current Game level
- provide (or specify) a fixed set of challenges for Game testing

DATA COLLECTION
- instrument Game

LOOSE ENDS
- screenshot
- model.txt
- implementation-notes.txt
- code review

MIGRATE TO COMMON
