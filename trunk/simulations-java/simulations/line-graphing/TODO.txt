TODO list for line-graphing

DEADLINES

DESIGN
- play area layout feels very unbalanced for game challenges, very heavy on the graph side
- revisit the placement algorithm for equations on graphed lines

HIGH
- consider some major rearchitecting, adding just one type of game challenge has already introduced an acceptable amount of chaos
- create quick-and-dirty examples of each type of challenge
- offset values used for LineGameModel.mvt determine when the graph is located, and will vary depending on where the graph is located in the challenge. Better to have a location for the graph than mvt offset?
- some of the fields and responsibilities in LineGameModel are challenge specific. Eg, point tools, whether to maintain a list of lines, etc.
- too many lists of lines; Graph model element should have a list of lines that it is displaying, PointTool should get list from Graph

MEDIUM
- make one point tool point "up"
- use typing to enforce usage of lines in slope-intercept form, instead of "assert( line.x1 == 0 )"

LOW

DEVELOPER CONTROLS
- replace the current Game challenge
- "resample" to change the challenges for the current Game level
- provide (or specify) a fixed set of challenges for Game testing

GAME CHALLENGES
Do each of these for "Graph the Line" and "Make the Equation"
- slope-intercept format + intercept variable
- slope-intercept format + slope variable (plot intercept)
- slope-intercept format + slope variable + intercept variable
- slope-intercept format + 2 point manipulators
- point-slope format + point variable
- point-slope format + slope variable (plot point)
- point-slope format + slope variable + point variable
- point-slope format + 2 point manipulators

DATA COLLECTION
- instrument Game

MIGRATE TO COMMON
- GameTimer, copied from BCE and RPAL
- RewardNode, copied and adapted from BCE and RPAL
- "game phase" framework
- standardize and move game strings to phetcommon? (Check, Try Again, Show Answer, Next)
