TODO list for line-graphing

DEADLINES

DESIGN
- play area layout feels unbalanced for game challenges
- revisit the placement algorithm for equations on graphed lines
- names for the 3 sims in this project ("Graphing: Lines", "Graphing: Linear Inequalities", "Graphing: Absolute Value")
- Game: more challenges?
- Game: rules for generating random challenges
- Game: GTL: should the guess equation be in simplified form, or correspond to exactly what the manipulators are set to? [simpified]
- Game: GTL: how should the equations (answer vs guess) be labeled? [see notes]
- Game: do we need point-slope challenges where only 1 component of point (x1 or y1) is interactive? [probably yes]
- Game: for failed challenge, should point and slope be plotted when answer is shown?  [OPEN, discuss with Karnina]
- Game: for correct MTE challenge, should point and slope be plotted? [no]
- Game: green is overloaded: correct answer vs slope [change in first 2 tabs]
- Game: yellow is overloaded: face/buttons vs intercept [change in first 2 tabs]
- Game: color coding on interactive equations is not relevant here, and conflicts with other uses of green and yellow [leave as is, change slope & intercept colors]
- Game: what if the user's answer is correct, but not simplified? penalty? answer and guess show different equations but are both green? [no penalty]

HIGH
- have separate spacing for fraction vs integer slope, this is a bit big for integer slopes (static and interactive equations, see slopeXSpacing field)
- random creation of challenges, subject to constraints tbd (or create a very large set of canned challenges)

MEDIUM
- use of Line.color is a bit of a mess, and makes it difficult to manage line lists
- change request: replace rise/run brackets with dashed lines with arrow heads on them
- sort out duplication in Challenge and ChallengeNode hierarchies (introducing booleans for what's interactive should collapse a lot of things)
- layout of EquationNode and InteractiveEquationNode subclasses is complicated, contains duplication, and will be difficult to maintain. Is there a better way?
- use InteractiveEquationNode subclasses to generate non-interactive equations in EquationFactory subclasses, if we can agree that the "look" can be standardized

LOW
- repackage in anticipating of having 3 sims in this project

DEVELOPER CONTROLS
- replay the current Game challenge
- "resample" to change the challenges for the current Game level
- provide (or specify) a fixed set of challenges for Game testing

DATA COLLECTION
- instrument Game

LOOSE ENDS
- screenshot
- model.txt
- implementation-notes.txt
- code review

MIGRATE TO COMMON
- #3423, migrate LGCanvas to common as "StageCanvas", reuse in other sims
