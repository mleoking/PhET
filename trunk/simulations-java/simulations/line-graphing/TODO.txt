TODO list for line-graphing

DEADLINES

DESIGN
- revisit the placement algorithm for equations on graphed lines, should it be on same end of line as slope manipulator? or in Q1 or Q4 (as is) so that it's close to interactive line?
- names for the 3 sims in this project ("Graphing: Lines", "Graphing: Linear Inequalities", "Graphing: Absolute Value")
- sign-off on specification of game levels
- decide whether Slope equation should be on 1 or 2 lines (SlopeEquationNode.PUT_UNSIMPLIFIED_SLOPE_ON_SEPARATE_LINE)

HIGH
- add support for fractional y-intercept in slope-intercept equations (only when y-intercept is not interactive)
- Game: "Place 3 Points" challenge
- Game: add support for mismatching the line form on the left and right side of GTL and MTE challenges
- Game: challenge generation (levels and randomization)

MEDIUM
- reuse LineFormGraphNode subclasses in game
- move things to EquationNode base class (adding UndefinedSlopeIndicatorNode, creating slope nodes,...)
- sort out duplication in IChallenge and ChallengeNode hierarchies (introducing booleans for what's interactive should collapse a lot of things)

LOW
- remove EquationControls.xPadding param if we decide to split Slope equation across 2 lines
- implementation of SlopeInterceptEquationNode and PointSlopeEquationNode would be clearer if nodes were added selectively, rather than removed
- Game: for GTE challenge, "Your line" equation shifts up and down when slope changes between fraction and integer
- use DefaultDecimalFormat("0") in DynamicValueNode, instead of doing double-to-int conversion
- vertical alignment of title in EquationControls subclasses looks a little off
- repackage, in anticipation of having 3 sims in this project

DEVELOPER CONTROLS
- replay the current Game challenge
- "resample" to change the challenges for the current Game level
- provide (or specify) a fixed set of challenges for Game testing

DATA COLLECTION
- instrument Game

LOOSE ENDS
- screenshot
- model.txt
- implementation-notes.txt
- code review

MIGRATE TO COMMON
