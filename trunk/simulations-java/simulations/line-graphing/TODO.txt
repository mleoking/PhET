TODO list for line-graphing

DEADLINES

DESIGN
- revisit the placement algorithm for equations on graphed lines, should it be on same end of line as slope manipulator? or in Q1 or Q4 (as is) so that it's close to interactive line?
- names for the 3 sims in this project ("Graphing: Lines", "Graphing: Linear Inequalities", "Graphing: Absolute Value")
- sign-off on specification of game levels

HIGH
- LineFormsModel: investigate implications of replacing runRange and riseRange with x2Range and y2Range
- Point-Slope: equations on standard graphed lines are in wrong form, showing point-slope, should be slope-intercept (but if fixed, "saved" version of y=x will be (y-0)=(x-0))
- Slope: implement new "Slope" tab
- Slope: deal with changes in SlopeEquationControls panel width, due to changes in the equation's unsimplified value
- Slope: horizontally center the number parts of the unsimplified rise and run in SlopeEquationNode
- Slope: label standard lines as m=1, m=-1
- Game: add support for fractional y-intercept in slope-intercept equations (only when y-intercept is non-interactive)
- Game: "Place 3 Points" challenge
- Game: add support for mismatching the line form on the left and right side of GTL and MTE challenges
- Game: challenge generation (levels and randomization)

MEDIUM
- Game: for GTE challenge, "Your line" equation shifts up and down when slope changes between fraction and integer
- move things to EquationNode base class (adding UndefinedSlopeIndicatorNode, creating slope nodes,...)
- sort out duplication in IChallenge and ChallengeNode hierarchies (introducing booleans for what's interactive should collapse a lot of things)

LOW
- repackage, in anticipation of having 3 sims in this project

DEVELOPER CONTROLS
- replay the current Game challenge
- "resample" to change the challenges for the current Game level
- provide (or specify) a fixed set of challenges for Game testing

DATA COLLECTION
- instrument Game

LOOSE ENDS
- screenshot
- model.txt
- implementation-notes.txt
- code review

MIGRATE TO COMMON
