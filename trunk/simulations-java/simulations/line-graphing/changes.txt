4/4/12 add colors for canvas and grid background
4/4/12 clean up visibility of interactive line
4/4/12 set rise/run feature off by default
4/4/12 generate graph-related icons programmatically, to facilitate changing colors
4/4/12 add slope manipulator after intercept, so that slope can be changed when x=0
4/4/12 group all line-related check boxes together
4/4/12 improve icons using workaround for #558 (image returned by PPath.toImage is clipped on right and bottom edges)
4/4/12 improved icon for rise/run check box
4/4/12 increase stroke width of rise/run divisor line
4/4/12 change color of point tool, it was clashing with interactive line color
4/4/12 put a translucent background behind values on rise/run brackets, so they are visible when on top of other things, color code to slope
4/4/12 use gray for saved lines, green for highlight on mouseOver
4/4/12 tweak font for equations shown on lines
4/4/12 tweak color scheme
4/4/12 used colorblind-friendly version of red for interactive line
4/4/12 change "Show" panel to "Graph", rename and simplify constructor
4/4/12 tweak brackets so they don't get lost behind manipulators, and they look nicer where they meet
4/4/12 make manipulators slightly larger
4/4/12 add separator for save/erase buttons
4/4/12 replace equation with "x = 0" when slope is undefined
4/4/12 put "Erase Lines" button next to "Save Line" button
4/4/12 don't disable any controls when "Lines" is unchecked (for discussion)
4/4/12 add horizontal separators for titles in control panels
4/3/12 move formatting of equation in reduced form from model to view
4/3/12 constrain drag range of line manipulators to match equation constraints
4/3/12 use nearest-neighbor rounding instead of truncation when computing reduced form of equation
4/3/12 rename spinner button images
4/3/12 tweak font sizes
4/3/12 delete JSpinner-based equation implementation [63011]
4/3/12 color code the spinner buttons to match the line manipulators
4/3/12 replace JSpinners with SpinnerButtonNode from fractions project
4/3/12 drag handler base class for line manipulators
4/3/12 add rise/run/intercept parameters to sim-sharing messages for line manipulators
4/3/12 misc cleanup
4/3/12 scale bracket tip with when bracket width is < a threshold
4/3/12 first pass at drag handlers for line manipulators (glitchy, behavior doesn't match requirements)
4/3/12 use white for all piccolo buttons until we work out more important color-coding issues
4/3/12 3D look for line manipulators
4/2/12 check for run==0 before rise==0
4/2/12 show reduced equations on lines
4/2/12 show unreduced equations on lines
4/2/12 add equations (placeholder) to lines
4/2/12 make "Reset All" button white until we decide on colors
4/2/12 add rise/run icon
4/2/12 replace MinimizeMaximizeButtonNode with ToggleButtonNode
4/2/12 load common images statically in LGResources
4/2/12 use transparent background behind control panel title
4/2/12 factor out LineManipulatorNode, so we can play with look of this
4/2/12 round corners of rise/run brackets
4/2/12 add quick-and-dirty icons for visibility controls related to lines
4/2/12 point tool icon for control panel
4/2/12 adjust point tool image and font to fit (-10,-10)
3/30/12 add point tool
3/30/12 convert line model to double precision, to support continuous dragging
3/30/12 handle cases where rise or run is zero
3/30/12 change "Graph Lines" check box to "Lines"
3/30/12 add rise and run brackets, wire up to check boxes
3/30/12 for development, allow all values to range (-10,+10)
3/30/12 add horizontal bracket for displaying run
3/30/12 highlight saved lines on mouseOver
3/30/12 hide manipulators when interactive line is not visible
3/29/12 added manipulators for slope and intercept (no drag handlers yet)
3/29/12 create specialization of graph that deals with direct manipulation and interactivity
3/29/12 add show/hide button for slope-intercept equation
3/29/12 color coding for slope and intercept
3/28/12 move Save Lines button into equation control panel
3/28/12 extend lines a bit beyond the bounds of the grid
3/28/12 create LGColors
3/28/12 constrain lines to the range of the graph
3/28/12 quick-and-dirty implementation of equation using Swing spinners
3/28/12 disable "Save Line" button until the line has been changed
3/28/12 add intermediate nodes to maintain rendering order for interactive, standard and saved lines
3/28/12 add interactive line to graph
3/28/12 wire up Save Line and Erase Lines buttons
3/28/12 disable check boxes for standard lines when "Graph lines" is unchecked
3/28/12 wire up "Graph lines" check box
3/28/12 make SlopeInterceptLine immutable
3/28/12 add standard lines and wire up to visibility controls
3/28/12 add support for different color and stroke for major grid lines
3/28/12 add major and minor ticks to graph
3/28/12 add axes (no ticks yet)
3/28/12 move origin of graph view to (0,0)
3/28/12 intermediate progress on line model, graph model, graph view
3/27/12 split up controls for saving and erasing lines, since they are unlikely to be co-located
3/27/12 migrate PropertyCheckBoxWithIcon to phetcommon
3/27/12 add placeholders for icons in "Show" control panel
3/27/12 delete control for choosing from of slope-intercept equation, we're using only y=mx+b
3/27/12 add additional controls to "Show" control panel
3/27/12 change format of standard equations (y=+1x, y=-1x)
3/20/12 adjust Intro canvas layout, implement Reset All
3/20/12 placeholders for graph and equation, to get a feel for layout
3/20/12 control for showing standard lines
3/20/12 control for chosing form of slope-intercept equation
3/20/12 control for saving and erasing lines
3/20/12 English strings for Intro tab
3/20/12 add "Reset All" button to Intro canvas
3/20/12 create MVC structure for Intro and Game tabs
3/20/12 set up project skeleton in SVN