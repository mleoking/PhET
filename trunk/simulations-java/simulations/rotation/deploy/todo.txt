################
#     To Do
################
              
•	During playback, sometimes off-platform character spins in place (looks like on-platform vs. off-platform state is not being recorded and restored properly)
•	For X,V,A graphs, readouts should be on-graph, no text-boxes on left hand side
•	Checkbox to remove/add second bug's dashed line data in graph. Bug itself should remain visible.
•   Bug: Mouse gets disassociated from ladybug character after trying to drag out of bounds.
•	Improve performance
•   Symbol key takes a long time before initial paint.
•	Support for "missing values" in the series data (for when characters are being dragged by the user and don't have values for angular data series)
•	Factor MotionBodyState and MotionBodySeries into a single object
•	Implementation for setting platform angle by setting character angle is fragile 
•	Shadow projections should be considered after AAPT.
•	Possible interview question: bug icon at tip of graph to improve conceptual connection
•	Bug: sun.dc.pr.PRException: endPath: bad path
•	RotationBody should have internal representation for angular velocity and angular acceleration instead of relying on RotationPlatform's instance?
•	Torque mode: Should be able to "spin" the wheel (i.e. drag, let go, and have it continue to spin, at least in friction mode)
•	Consolidate MovingMan, Forces1D, Ramp, Rotation, Torque into a single codebase.
•	Symbol key should appear near the mouse when "show symbol key" pressed

################
#           Questions:
################
•	Got rid of abbreviations like (vx) on charts, do we want to show abbreviations for other series?
•	Use colors from the color chart: how to handle components and multiple bodies?
    -Current implementation uses:
        o vector magnitude for 1st character = color from Moving Man
        o x and y components are other main colors (red, green, blue)
        o second body is same as above but darker 

################
#           Postponed:
################
•	Investigate acceleration model from Motion2D simulation as a possibility for replacing the implementation in rotation. 

