<!--
The JNLP task requires:
[project]/data/[project]/localization/[project]-strings.properties
has properties
[project].name
[project].description

[project]/data/[project]/[project].properties
has properties
version.major
version.minor
version.dev
version.revision

about.credits (optional)
-->

<project name="PhET Master Build Script" default="build-all" basedir=".">

<!--Newer Build Tasks-->

    <property name="phetbuild-classes" location="ant_output/phetbuild/classes"/>
    <property name="proguard.jar" location="build-tools/proguard3.8/lib/proguard.jar"/>
    <property name="phetbuild-src" location="build-tools/phet-build/src"/>
    <property name="phetbuild-classname" value="edu.colorado.phet.build.PhetBuildTask"/>
    <property name="phetdisplaystats-classname" value="edu.colorado.phet.build.PhetDisplayStatsTask"/>
    <property name="phetbuildall-classname" value="edu.colorado.phet.build.PhetBuildAllTask"/>
    <property name="phetbuildalljnlp-classname" value="edu.colorado.phet.build.PhetBuildAllJNLPTask"/>
    <property name="phetclean-classname" value="edu.colorado.phet.build.PhetCleanTask"/>
    <property name="phetjnlp-classname" value="edu.colorado.phet.build.PhetBuildJnlpTask"/>

    <property name="build-tools" value="build-tools"/>
    <property name="phetbuild-dependencies" value="${phetbuild-classes};${proguard.jar}" />
    <property file="local.properties"/>

    <taskdef name="maverick-ssh" classname="com.sshtools.ant.Ssh" classpath="${build-tools}/maverick/lib/maverick-ant.jar"/>

    <target name="compile_phet-build">
        <mkdir dir="${phetbuild-classes}"/>
        <javac srcdir="${phetbuild-src}" destdir="${phetbuild-classes}" classpath="${proguard.jar}" debug="true" debuglevel="lines,source"/>
    </target>

    <target name="clean_phet-build">
        <delete dir="${phetbuild-classes}" />
    </target>

    <target name="declare_phet-build-task" depends="clean_phet-build, compile_phet-build">
        <taskdef name="phet-build"
                 classname="${phetbuild-classname}"
                 classpath="${phetbuild-dependencies}"/>

        <taskdef name="phet-clean"
                 classname="${phetclean-classname}"
                 classpath="${phetbuild-dependencies}"/>

        <taskdef name="phet-jnlp"
                 classname="${phetjnlp-classname}"
                 classpath="${phetbuild-dependencies}"/>

        <taskdef name="phet-build-all"
                 classname="${phetbuildall-classname}"
                 classpath="${phetbuild-dependencies}"/>

        <taskdef name="phet-build-all-jnlp"
                 classname="${phetbuildalljnlp-classname}"
                 classpath="${phetbuild-dependencies}"/>

        <taskdef name="phet-display-stats"
                 classname="${phetdisplaystats-classname}"
                 classpath="${phetbuild-dependencies}"/>
    </target>

    <target name="display-stats" depends="init">
        <phet-display-stats/>
    </target>

    <target name="init" depends="declare_phet-build-task"/>

    <target name="build_AllSimApp" depends="init">
        <phet-build project="all-sims" shrink="false"/>
    </target>

    <target name="build_AllSimApp_shrink" depends="init">
        <phet-build project="all-sims" />
    </target>

    <target name="build_esp" depends="init">
        <phet-build project="energy-skate-park" destfile="deploy/energy-skate-park.jar"/>
        <phet-jnlp project="energy-skate-park" flavor="energy-skate-park" deployurl="http://www.colorado.edu/physics/phet/dev/ec3/1.05.20/"/>
    </target>

    <target name="build_cck" depends="init">
        <phet-build project="cck" destfile="deploy/cck.jar"/>
        <phet-jnlp project="cck" flavor="cck-ac"/>
        <phet-jnlp project="cck" flavor="cck-dc"/>
    </target>

    <target name="build_all" depends="init">
        <echo message="Starting build all..."/>
        <phet-build-all/>
        <echo message="Finished build all."/>
    </target>

    <target name="build_all_jnlp" depends="init">
        <echo message="Starting build..."/>
        <phet-build-all-jnlp deployURL="${dev_root}/temp/dev"/>
        <echo message="Finished build."/>
    </target>

    <property name="phet-ssh-root" value="/Net/www/webdata/htdocs/UCB/AcademicAffairs/ArtsSciences/physics/phet"/>
    <property name="dev_root" value="http://www.colorado.edu/physics/phet/dev"/>

    <target name="build-sim" depends="init">
        <phet-build project="${name.sim}" destfile="deploy/${name.sim}.jar"/>
    </target>

    <target name="build-jnlp" depends="init">
        <if>
            <not>
                <isset property="sim.flavor"/>
            </not>
            <then>
                <property name="sim.flavor" value="${name.sim}"/>
            </then>
        </if>
        <phet-jnlp project="${name.sim}" flavor="${sim.flavor}" deployurl="${sim_url}"/>
    </target>

    <target name="build_and_post" depends="init">
        <phet-build project="${name.sim}" destfile="deploy/${name.sim}.jar"/>
        <property name="sim_url" value="${dev_root}/${name.sim}/${sim.version}"/>
        <phet-jnlp project="${name.sim}" flavor="${name.sim}" deployurl="${sim_url}"/>

        <maverick-ssh host="${ssh-host}" username="${username}" password="${password}" version="2">
            <sftp action="mkdir" remotedir="${phet-ssh-root}/dev/${name.sim}"/>
            <sftp action="mkdir" remotedir="${phet-ssh-root}/dev/${name.sim}/${sim.version}"/>
            <sftp action="put" remotedir="${phet-ssh-root}/dev/${name.sim}/${sim.version}" verbose="true">
                <fileset dir="simulations/${name.sim}/deploy"></fileset>
            </sftp>
        </maverick-ssh>
        <exec executable="${browser}" spawn="true">
            <arg value="${sim_url}"/>
        </exec>
    </target>

    <target name="build_mri" depends="init">
        <phet-build project="mri"/>
    </target>
    
    <target name="build_photoelectric" depends="init">
        <phet-build project="photoelectric"/>
    </target>
    
</project>
